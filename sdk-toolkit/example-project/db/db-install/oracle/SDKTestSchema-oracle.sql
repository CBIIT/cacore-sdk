
ALTER TABLE ADDRESS
 DROP PRIMARY KEY CASCADE;
DROP TABLE ADDRESS CASCADE CONSTRAINTS;

CREATE TABLE ADDRESS
(
  ID   NUMBER(8)                                NOT NULL,
  ZIP  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE ALBUM
 DROP PRIMARY KEY CASCADE;
DROP TABLE ALBUM CASCADE CONSTRAINTS;

CREATE TABLE ALBUM
(
  ID     NUMBER(8)                              NOT NULL,
  TITLE  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE ALBUM_SONG
 DROP PRIMARY KEY CASCADE;
DROP TABLE ALBUM_SONG CASCADE CONSTRAINTS;

CREATE TABLE ALBUM_SONG
(
  ALBUM_ID  NUMBER(8)                           NOT NULL,
  SONG_ID   NUMBER(8)                           NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE ALL_DATA_TYPE
 DROP PRIMARY KEY CASCADE;
DROP TABLE ALL_DATA_TYPE CASCADE CONSTRAINTS;

CREATE TABLE ALL_DATA_TYPE
(
  ID                         NUMBER(8)          NOT NULL,
  INT_VALUE                  NUMBER(8),
  STRING_VALUE               VARCHAR2(50 BYTE),
  DOUBLE_VALUE               FLOAT(126),
  FLOAT_VALUE                NUMBER(8,2),
  DATE_VALUE                 DATE,
  BOOLEAN_VALUE              NUMBER(1),
  CLOB_VALUE                 CLOB,
  CHARACTER_VALUE            CHAR(1 BYTE),
  LONG_VALUE                 NUMBER(38),
  DOUBLE_PRIMITIVE_VALUE     FLOAT(126),
  INT_PRIMITIVE_VALUE        NUMBER(8),
  DATE_PRIMITIVE_VALUE       DATE,
  STRING_PRIMITIVE_VALUE     VARCHAR2(50 BYTE),
  FLOAT_PRIMITIVE_VALUE      NUMBER(8,2),
  BOOLEAN_PRIMITIVE_VALUE    NUMBER(22,1),
  CHARACTER_PRIMITIVE_VALUE  CHAR(1 BYTE),
  LONG_PRIMITIVE_VALUE       NUMBER(38)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


DROP TABLE ALL_DATA_TYPE_STRING_COLL CASCADE CONSTRAINTS;

CREATE TABLE ALL_DATA_TYPE_STRING_COLL
(
  ALL_DATA_TYPE_ID  NUMBER(8)                   NOT NULL,
  STRING_VALUE      VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE ALL_VALIDATION_TYPE
 DROP PRIMARY KEY CASCADE;
DROP TABLE ALL_VALIDATION_TYPE CASCADE CONSTRAINTS;

CREATE TABLE ALL_VALIDATION_TYPE
(
  ID             NUMBER(8)                      NOT NULL,
  EMAIL          VARCHAR2(50 BYTE),
  FUTURE         DATE,
  LENGTH         VARCHAR2(50 BYTE),
  MAX_NUMERIC    NUMBER,
  PAST           DATE,
  MAX_STRING     VARCHAR2(50 BYTE),
  MIN_NUMERIC    NUMBER,
  MIN_STRING     VARCHAR2(50 BYTE),
  NOT_EMPTY      VARCHAR2(50 BYTE),
  NOT_NULL       VARCHAR2(50 BYTE),
  RANGE_STRING   VARCHAR2(50 BYTE),
  RANGE_NUMERIC  NUMBER,
  PATTERN        VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE ASSISTANT
 DROP PRIMARY KEY CASCADE;
DROP TABLE ASSISTANT CASCADE CONSTRAINTS;

CREATE TABLE ASSISTANT
(
  ID            NUMBER(8)                       NOT NULL,
  NAME          VARCHAR2(50 BYTE),
  PROFESSOR_ID  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE ASSISTANT_PROFESSOR
 DROP PRIMARY KEY CASCADE;
DROP TABLE ASSISTANT_PROFESSOR CASCADE CONSTRAINTS;

CREATE TABLE ASSISTANT_PROFESSOR
(
  PROFESSOR_ID  NUMBER(8)                       NOT NULL,
  JOINING_YEAR  NUMBER(4)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE ASSOCIATE_PROFESSOR
 DROP PRIMARY KEY CASCADE;
DROP TABLE ASSOCIATE_PROFESSOR CASCADE CONSTRAINTS;

CREATE TABLE ASSOCIATE_PROFESSOR
(
  PROFESSOR_ID  NUMBER(8)                       NOT NULL,
  YEARS_SERVED  NUMBER(4)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE AUTHOR
 DROP PRIMARY KEY CASCADE;
DROP TABLE AUTHOR CASCADE CONSTRAINTS;

CREATE TABLE AUTHOR
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE AUTHOR_BOOK
 DROP PRIMARY KEY CASCADE;
DROP TABLE AUTHOR_BOOK CASCADE CONSTRAINTS;

CREATE TABLE AUTHOR_BOOK
(
  AUTHOR_ID  NUMBER(8)                          NOT NULL,
  BOOK_ID    NUMBER(8)                          NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE BAG
 DROP PRIMARY KEY CASCADE;
DROP TABLE BAG CASCADE CONSTRAINTS;

CREATE TABLE BAG
(
  ID     NUMBER(8)                              NOT NULL,
  STYLE  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE BAG_HANDLE
 DROP PRIMARY KEY CASCADE;
DROP TABLE BAG_HANDLE CASCADE CONSTRAINTS;

CREATE TABLE BAG_HANDLE
(
  BAG_ID     NUMBER(8)                          NOT NULL,
  HANDLE_ID  NUMBER(8)                          NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE BANK
 DROP PRIMARY KEY CASCADE;
DROP TABLE BANK CASCADE CONSTRAINTS;

CREATE TABLE BANK
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE BOOK
 DROP PRIMARY KEY CASCADE;
DROP TABLE BOOK CASCADE CONSTRAINTS;

CREATE TABLE BOOK
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE BRIDE
 DROP PRIMARY KEY CASCADE;
DROP TABLE BRIDE CASCADE CONSTRAINTS;

CREATE TABLE BRIDE
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE BRIDE_FATHER_IN_LAW
 DROP PRIMARY KEY CASCADE;
DROP TABLE BRIDE_FATHER_IN_LAW CASCADE CONSTRAINTS;

CREATE TABLE BRIDE_FATHER_IN_LAW
(
  BRIDE_ID   NUMBER(8)                          NOT NULL,
  IN_LAW_ID  NUMBER(8)                          NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE BRIDE_MOTHER_IN_LAW
 DROP PRIMARY KEY CASCADE;
DROP TABLE BRIDE_MOTHER_IN_LAW CASCADE CONSTRAINTS;

CREATE TABLE BRIDE_MOTHER_IN_LAW
(
  BRIDE_D    NUMBER(8)                          NOT NULL,
  IN_LAW_ID  NUMBER(8)                          NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE BUTTON
 DROP PRIMARY KEY CASCADE;
DROP TABLE BUTTON CASCADE CONSTRAINTS;

CREATE TABLE BUTTON
(
  ID     NUMBER(8)                              NOT NULL,
  HOLES  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE CALCULATOR
 DROP PRIMARY KEY CASCADE;
DROP TABLE CALCULATOR CASCADE CONSTRAINTS;

CREATE TABLE CALCULATOR
(
  ID             NUMBER(8)                      NOT NULL,
  DISCRIMINATOR  VARCHAR2(100 BYTE),
  BRAND          VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE CARD
 DROP PRIMARY KEY CASCADE;
DROP TABLE CARD CASCADE CONSTRAINTS;

CREATE TABLE CARD
(
  ID       NUMBER(8)                            NOT NULL,
  NAME     VARCHAR2(50 BYTE),
  SUIT_ID  NUMBER(8),
  IMAGE    CLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE CASH
 DROP PRIMARY KEY CASCADE;
DROP TABLE CASH CASCADE CONSTRAINTS;

CREATE TABLE CASH
(
  PAYMENT_ID  NUMBER(8)                         NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE CHAIN
 DROP PRIMARY KEY CASCADE;
DROP TABLE CHAIN CASCADE CONSTRAINTS;

CREATE TABLE CHAIN
(
  ID     NUMBER(8)                              NOT NULL,
  METAL  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE CHAIN_PENDANT
 DROP PRIMARY KEY CASCADE;
DROP TABLE CHAIN_PENDANT CASCADE CONSTRAINTS;

CREATE TABLE CHAIN_PENDANT
(
  CHAIN_ID    NUMBER(8)                         NOT NULL,
  PENDANT_ID  NUMBER(8)                         NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE CHARACTER_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE CHARACTER_KEY CASCADE CONSTRAINTS;

CREATE TABLE CHARACTER_KEY
(
  ID    CHAR(1 BYTE)                            NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE CHARACTER_PRIMITIVE_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE CHARACTER_PRIMITIVE_KEY CASCADE CONSTRAINTS;

CREATE TABLE CHARACTER_PRIMITIVE_KEY
(
  ID    CHAR(1 BYTE)                            NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE CHEF
 DROP PRIMARY KEY CASCADE;
DROP TABLE CHEF CASCADE CONSTRAINTS;

CREATE TABLE CHEF
(
  ID             NUMBER(8)                      NOT NULL,
  NAME           VARCHAR2(50 BYTE),
  RESTAURANT_ID  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE CHILD
 DROP PRIMARY KEY CASCADE;
DROP TABLE CHILD CASCADE CONSTRAINTS;

CREATE TABLE CHILD
(
  ID         NUMBER(8)                          NOT NULL,
  NAME       VARCHAR2(50 BYTE),
  FATHER_ID  NUMBER(8),
  MOTHER_ID  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE COMPUTER
 DROP PRIMARY KEY CASCADE;
DROP TABLE COMPUTER CASCADE CONSTRAINTS;

CREATE TABLE COMPUTER
(
  ID    NUMBER(8)                               NOT NULL,
  TYPE  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE CREDIT
 DROP PRIMARY KEY CASCADE;
DROP TABLE CREDIT CASCADE CONSTRAINTS;

CREATE TABLE CREDIT
(
  PAYMENT_ID   NUMBER(8)                        NOT NULL,
  CARD_NUMBER  VARCHAR2(50 BYTE),
  BANK_ID      NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE CRT_MONITOR
 DROP PRIMARY KEY CASCADE;
DROP TABLE CRT_MONITOR CASCADE CONSTRAINTS;

CREATE TABLE CRT_MONITOR
(
  MONITOR_ID    NUMBER(8)                       NOT NULL,
  REFRESH_RATE  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE CURRENCY
 DROP PRIMARY KEY CASCADE;
DROP TABLE CURRENCY CASCADE CONSTRAINTS;

CREATE TABLE CURRENCY
(
  ID             NUMBER(8)                      NOT NULL,
  DISCRIMINATOR  VARCHAR2(100 BYTE),
  COUNTRY        VARCHAR2(50 BYTE),
  VALUE          NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE DECK
 DROP PRIMARY KEY CASCADE;
DROP TABLE DECK CASCADE CONSTRAINTS;

CREATE TABLE DECK
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE DESIGNER
 DROP PRIMARY KEY CASCADE;
DROP TABLE DESIGNER CASCADE CONSTRAINTS;

CREATE TABLE DESIGNER
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE DESSERT
 DROP PRIMARY KEY CASCADE;
DROP TABLE DESSERT CASCADE CONSTRAINTS;

CREATE TABLE DESSERT
(
  ID             NUMBER(8)                      NOT NULL,
  TOPPING        VARCHAR2(50 BYTE),
  FILLING        VARCHAR2(50 BYTE),
  DISCRIMINATOR  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE DESSERT_UTENSIL
 DROP PRIMARY KEY CASCADE;
DROP TABLE DESSERT_UTENSIL CASCADE CONSTRAINTS;

CREATE TABLE DESSERT_UTENSIL
(
  DESSERT_ID  NUMBER(8)                         NOT NULL,
  UTENSIL_ID  NUMBER(8)                         NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE DISPLAY
 DROP PRIMARY KEY CASCADE;
DROP TABLE DISPLAY CASCADE CONSTRAINTS;

CREATE TABLE DISPLAY
(
  ID      NUMBER(8)                             NOT NULL,
  WIDTH   NUMBER(8),
  HEIGHT  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE DOG
 DROP PRIMARY KEY CASCADE;
DROP TABLE DOG CASCADE CONSTRAINTS;

CREATE TABLE DOG
(
  ID      NUMBER(8)                             NOT NULL,
  BREED   VARCHAR2(50 BYTE),
  GENDER  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE DOUBLE_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE DOUBLE_KEY CASCADE CONSTRAINTS;

CREATE TABLE DOUBLE_KEY
(
  ID    NUMBER(8,2)                             NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE DOUBLE_PRIMITIVE_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE DOUBLE_PRIMITIVE_KEY CASCADE CONSTRAINTS;

CREATE TABLE DOUBLE_PRIMITIVE_KEY
(
  ID    NUMBER(8,2)                             NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE ELEMENT
 DROP PRIMARY KEY CASCADE;
DROP TABLE ELEMENT CASCADE CONSTRAINTS;

CREATE TABLE ELEMENT
(
  ID                 NUMBER(8)                  NOT NULL,
  NAME               VARCHAR2(50 BYTE),
  PARENT_ELEMENT_ID  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE EMPLOYEE
 DROP PRIMARY KEY CASCADE;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;

CREATE TABLE EMPLOYEE
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE EMPLOYEE_PROJECT
 DROP PRIMARY KEY CASCADE;
DROP TABLE EMPLOYEE_PROJECT CASCADE CONSTRAINTS;

CREATE TABLE EMPLOYEE_PROJECT
(
  EMPLOYEE_ID  NUMBER(8)                        NOT NULL,
  PROJECT_ID   NUMBER(8)                        NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE FISH
 DROP PRIMARY KEY CASCADE;
DROP TABLE FISH CASCADE CONSTRAINTS;

CREATE TABLE FISH
(
  ID                  NUMBER(8)                 NOT NULL,
  GENERA              VARCHAR2(50 BYTE),
  PRIMARY_COLOR       VARCHAR2(50 BYTE),
  FIN_SIZE            NUMBER(8),
  DISCRIMINATOR       VARCHAR2(50 BYTE),
  TANK_ID             NUMBER(8),
  TANK_DISCRIMINATOR  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE FLIGHT
 DROP PRIMARY KEY CASCADE;
DROP TABLE FLIGHT CASCADE CONSTRAINTS;

CREATE TABLE FLIGHT
(
  ID           NUMBER(8)                        NOT NULL,
  DESTINATION  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE FLIGHT_PASSANGER
 DROP PRIMARY KEY CASCADE;
DROP TABLE FLIGHT_PASSANGER CASCADE CONSTRAINTS;

CREATE TABLE FLIGHT_PASSANGER
(
  FLIGHT_ID     NUMBER(8)                       NOT NULL,
  PASSANGER_ID  NUMBER(8)                       NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE FLOAT_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE FLOAT_KEY CASCADE CONSTRAINTS;

CREATE TABLE FLOAT_KEY
(
  ID    NUMBER(8,2)                             NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE FLOAT_PRIMITIVE_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE FLOAT_PRIMITIVE_KEY CASCADE CONSTRAINTS;

CREATE TABLE FLOAT_PRIMITIVE_KEY
(
  ID    NUMBER(8,2)                             NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE FRESHWATER_FISH_TANK
 DROP PRIMARY KEY CASCADE;
DROP TABLE FRESHWATER_FISH_TANK CASCADE CONSTRAINTS;

CREATE TABLE FRESHWATER_FISH_TANK
(
  ID            NUMBER(8)                       NOT NULL,
  SHAPE         VARCHAR2(50 BYTE),
  NUM_GALLONS   NUMBER(8),
  FILTER_MODEL  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE GOVERMENT
 DROP PRIMARY KEY CASCADE;
DROP TABLE GOVERMENT CASCADE CONSTRAINTS;

CREATE TABLE GOVERMENT
(
  ID                        NUMBER(8)           NOT NULL,
  DISCRIMINATOR             VARCHAR2(100 BYTE),
  COUNTRY                   VARCHAR2(50 BYTE),
  PRIME_MINISTER            VARCHAR2(50 BYTE),
  PRESIDENT                 VARCHAR2(50 BYTE),
  DEMOCRATIC_DISCRIMINATOR  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE GRADUATE_STUDENT
 DROP PRIMARY KEY CASCADE;
DROP TABLE GRADUATE_STUDENT CASCADE CONSTRAINTS;

CREATE TABLE GRADUATE_STUDENT
(
  STUDENT_ID    NUMBER(8)                       NOT NULL,
  PROJECT_NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE GRAPHIC_CALCULATOR
 DROP PRIMARY KEY CASCADE;
DROP TABLE GRAPHIC_CALCULATOR CASCADE CONSTRAINTS;

CREATE TABLE GRAPHIC_CALCULATOR
(
  CALCULATOR_ID  NUMBER(8)                      NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE HAND
 DROP PRIMARY KEY CASCADE;
DROP TABLE HAND CASCADE CONSTRAINTS;

CREATE TABLE HAND
(
  ID  NUMBER(8)                                 NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE HANDLE
 DROP PRIMARY KEY CASCADE;
DROP TABLE HANDLE CASCADE CONSTRAINTS;

CREATE TABLE HANDLE
(
  ID     NUMBER(8)                              NOT NULL,
  COLOR  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE HAND_CARD
 DROP PRIMARY KEY CASCADE;
DROP TABLE HAND_CARD CASCADE CONSTRAINTS;

CREATE TABLE HAND_CARD
(
  HAND_ID  NUMBER(8)                            NOT NULL,
  CARD_ID  NUMBER(8)                            NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE HARD_DRIVE
 DROP PRIMARY KEY CASCADE;
DROP TABLE HARD_DRIVE CASCADE CONSTRAINTS;

CREATE TABLE HARD_DRIVE
(
  ID           NUMBER(8)                        NOT NULL,
  DRIVE_SIZE   NUMBER(8),
  COMPUTER_ID  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


DROP TABLE HIBERNATE_UNIQUE_KEY CASCADE CONSTRAINTS;

CREATE TABLE HIBERNATE_UNIQUE_KEY
(
  NEXT_HI  NUMBER(10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


DROP TABLE HI_VALUE CASCADE CONSTRAINTS;

CREATE TABLE HI_VALUE
(
  NEXT_VALUE  NUMBER
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE HUMAN
 DROP PRIMARY KEY CASCADE;
DROP TABLE HUMAN CASCADE CONSTRAINTS;

CREATE TABLE HUMAN
(
  MAMMAL_ID  NUMBER(8)                          NOT NULL,
  DIET       VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE INTEGER_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE INTEGER_KEY CASCADE CONSTRAINTS;

CREATE TABLE INTEGER_KEY
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE INTEGER_PRIMITIVE_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE INTEGER_PRIMITIVE_KEY CASCADE CONSTRAINTS;

CREATE TABLE INTEGER_PRIMITIVE_KEY
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE IN_LAW
 DROP PRIMARY KEY CASCADE;
DROP TABLE IN_LAW CASCADE CONSTRAINTS;

CREATE TABLE IN_LAW
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE KEYCHAIN
 DROP PRIMARY KEY CASCADE;
DROP TABLE KEYCHAIN CASCADE CONSTRAINTS;

CREATE TABLE KEYCHAIN
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE LATCH_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE LATCH_KEY CASCADE CONSTRAINTS;

CREATE TABLE LATCH_KEY
(
  ID           NUMBER(8)                        NOT NULL,
  TYPE         VARCHAR2(50 BYTE),
  KEYCHAIN_ID  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE LCD_MONITOR
 DROP PRIMARY KEY CASCADE;
DROP TABLE LCD_MONITOR CASCADE CONSTRAINTS;

CREATE TABLE LCD_MONITOR
(
  MONITOR_ID     NUMBER(8)                      NOT NULL,
  DPI_SUPPORTED  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE LONG_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE LONG_KEY CASCADE CONSTRAINTS;

CREATE TABLE LONG_KEY
(
  ID    NUMBER(38)                              NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE LONG_PRIMITIVE_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE LONG_PRIMITIVE_KEY CASCADE CONSTRAINTS;

CREATE TABLE LONG_PRIMITIVE_KEY
(
  ID    NUMBER(38)                              NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE LUGGAGE
 DROP PRIMARY KEY CASCADE;
DROP TABLE LUGGAGE CASCADE CONSTRAINTS;

CREATE TABLE LUGGAGE
(
  ID             NUMBER(8)                      NOT NULL,
  DISCRIMINATOR  VARCHAR2(100 BYTE),
  CAPACITY       NUMBER(8),
  KEY_CODE       NUMBER(8),
  EXPANDABLE     VARCHAR2(1 BYTE),
  WHEEL_ID       NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE MAMMAL
 DROP PRIMARY KEY CASCADE;
DROP TABLE MAMMAL CASCADE CONSTRAINTS;

CREATE TABLE MAMMAL
(
  ID          NUMBER(8)                         NOT NULL,
  HAIR_COLOR  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE MONITOR
 DROP PRIMARY KEY CASCADE;
DROP TABLE MONITOR CASCADE CONSTRAINTS;

CREATE TABLE MONITOR
(
  DISPLAY_ID  NUMBER(8)                         NOT NULL,
  BRAND       VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE NO_ID_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE NO_ID_KEY CASCADE CONSTRAINTS;

CREATE TABLE NO_ID_KEY
(
  MY_KEY  NUMBER(8)                             NOT NULL,
  NAME    VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE ORDERLINE
 DROP PRIMARY KEY CASCADE;
DROP TABLE ORDERLINE CASCADE CONSTRAINTS;

CREATE TABLE ORDERLINE
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE ORGANIZATION
 DROP PRIMARY KEY CASCADE;
DROP TABLE ORGANIZATION CASCADE CONSTRAINTS;

CREATE TABLE ORGANIZATION
(
  ID             NUMBER(8)                      NOT NULL,
  DISCRIMINATOR  VARCHAR2(100 BYTE),
  NAME           VARCHAR2(50 BYTE),
  AGENCY_BUDGET  NUMBER(8),
  CEO            VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE PARENT
 DROP PRIMARY KEY CASCADE;
DROP TABLE PARENT CASCADE CONSTRAINTS;

CREATE TABLE PARENT
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE PASSANGER
 DROP PRIMARY KEY CASCADE;
DROP TABLE PASSANGER CASCADE CONSTRAINTS;

CREATE TABLE PASSANGER
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE PAYMENT
 DROP PRIMARY KEY CASCADE;
DROP TABLE PAYMENT CASCADE CONSTRAINTS;

CREATE TABLE PAYMENT
(
  ID      NUMBER(8)                             NOT NULL,
  AMOUNT  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE PENDANT
 DROP PRIMARY KEY CASCADE;
DROP TABLE PENDANT CASCADE CONSTRAINTS;

CREATE TABLE PENDANT
(
  ID     NUMBER(8)                              NOT NULL,
  SHAPE  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE PERSON
 DROP PRIMARY KEY CASCADE;
DROP TABLE PERSON CASCADE CONSTRAINTS;

CREATE TABLE PERSON
(
  ID          NUMBER(8)                         NOT NULL,
  NAME        VARCHAR2(50 BYTE),
  ADDRESS_ID  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE PRIVATE_TEACHER
 DROP PRIMARY KEY CASCADE;
DROP TABLE PRIVATE_TEACHER CASCADE CONSTRAINTS;

CREATE TABLE PRIVATE_TEACHER
(
  TEACHER_ID        NUMBER(8)                   NOT NULL,
  YEARS_EXPERIENCE  NUMBER(4)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE PRODUCT
 DROP PRIMARY KEY CASCADE;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;

CREATE TABLE PRODUCT
(
  ID            NUMBER(8)                       NOT NULL,
  NAME          VARCHAR2(50 BYTE),
  ORDERLINE_ID  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE PROFESSOR
 DROP PRIMARY KEY CASCADE;
DROP TABLE PROFESSOR CASCADE CONSTRAINTS;

CREATE TABLE PROFESSOR
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE PROJECT
 DROP PRIMARY KEY CASCADE;
DROP TABLE PROJECT CASCADE CONSTRAINTS;

CREATE TABLE PROJECT
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE PUPIL
 DROP PRIMARY KEY CASCADE;
DROP TABLE PUPIL CASCADE CONSTRAINTS;

CREATE TABLE PUPIL
(
  ID          NUMBER(8)                         NOT NULL,
  NAME        VARCHAR2(50 BYTE),
  TEACHER_ID  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE RESTAURANT
 DROP PRIMARY KEY CASCADE;
DROP TABLE RESTAURANT CASCADE CONSTRAINTS;

CREATE TABLE RESTAURANT
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE SALTWATER_FISH_TANK
 DROP PRIMARY KEY CASCADE;
DROP TABLE SALTWATER_FISH_TANK CASCADE CONSTRAINTS;

CREATE TABLE SALTWATER_FISH_TANK
(
  ID                     NUMBER(8)              NOT NULL,
  SHAPE                  VARCHAR2(50 BYTE),
  NUM_GALLONS            NUMBER(8),
  PROTEIN_SKIMMER_MODEL  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE SALTWATER_FISH_TANK_SUBSTRATE
 DROP PRIMARY KEY CASCADE;
DROP TABLE SALTWATER_FISH_TANK_SUBSTRATE CASCADE CONSTRAINTS;

CREATE TABLE SALTWATER_FISH_TANK_SUBSTRATE
(
  SALTWATER_FISH_TANK_ID  NUMBER(8)             NOT NULL,
  SUBSTRATE_ID            NUMBER(8)             NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE SHIRT
 DROP PRIMARY KEY CASCADE;
DROP TABLE SHIRT CASCADE CONSTRAINTS;

CREATE TABLE SHIRT
(
  ID     NUMBER(8)                              NOT NULL,
  STYLE  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE SHIRT_BUTTON
 DROP PRIMARY KEY CASCADE;
DROP TABLE SHIRT_BUTTON CASCADE CONSTRAINTS;

CREATE TABLE SHIRT_BUTTON
(
  SHIRT_ID   NUMBER(8)                          NOT NULL,
  BUTTON_ID  NUMBER(8)                          NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE SHOES
 DROP PRIMARY KEY CASCADE;
DROP TABLE SHOES CASCADE CONSTRAINTS;

CREATE TABLE SHOES
(
  ID             NUMBER(8)                      NOT NULL,
  DISCRIMINATOR  VARCHAR2(50 BYTE),
  COLOR          VARCHAR2(50 BYTE),
  SPORTS_TYPE    VARCHAR2(50 BYTE),
  DESIGNER_ID    NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE SONG
 DROP PRIMARY KEY CASCADE;
DROP TABLE SONG CASCADE CONSTRAINTS;

CREATE TABLE SONG
(
  ID     NUMBER(8)                              NOT NULL,
  TITLE  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE STRING_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE STRING_KEY CASCADE CONSTRAINTS;

CREATE TABLE STRING_KEY
(
  ID    VARCHAR2(50 BYTE)                       NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE STRING_PRIMITIVE_KEY
 DROP PRIMARY KEY CASCADE;
DROP TABLE STRING_PRIMITIVE_KEY CASCADE CONSTRAINTS;

CREATE TABLE STRING_PRIMITIVE_KEY
(
  ID    VARCHAR2(50 BYTE)                       NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE STUDENT
 DROP PRIMARY KEY CASCADE;
DROP TABLE STUDENT CASCADE CONSTRAINTS;

CREATE TABLE STUDENT
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE SUBSTRATE
 DROP PRIMARY KEY CASCADE;
DROP TABLE SUBSTRATE CASCADE CONSTRAINTS;

CREATE TABLE SUBSTRATE
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE SUIT
 DROP PRIMARY KEY CASCADE;
DROP TABLE SUIT CASCADE CONSTRAINTS;

CREATE TABLE SUIT
(
  ID       NUMBER(8)                            NOT NULL,
  NAME     VARCHAR2(50 BYTE),
  DECK_ID  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE TANK_ACCESSORY
 DROP PRIMARY KEY CASCADE;
DROP TABLE TANK_ACCESSORY CASCADE CONSTRAINTS;

CREATE TABLE TANK_ACCESSORY
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE TANK_TANK_ACCESSORY
 DROP PRIMARY KEY CASCADE;
DROP TABLE TANK_TANK_ACCESSORY CASCADE CONSTRAINTS;

CREATE TABLE TANK_TANK_ACCESSORY
(
  TANK_ID             NUMBER(8)                 NOT NULL,
  TANK_ACCESSORY_ID   NUMBER(8)                 NOT NULL,
  TANK_DISCRIMINATOR  VARCHAR2(50 BYTE)         NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE TEACHER
 DROP PRIMARY KEY CASCADE;
DROP TABLE TEACHER CASCADE CONSTRAINTS;

CREATE TABLE TEACHER
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE TENURED_PROFESSOR
 DROP PRIMARY KEY CASCADE;
DROP TABLE TENURED_PROFESSOR CASCADE CONSTRAINTS;

CREATE TABLE TENURED_PROFESSOR
(
  PROFESSOR_ID  NUMBER(8)                       NOT NULL,
  TENURED_YEAR  NUMBER(4)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE UNDERGRADUATE_STUDENT
 DROP PRIMARY KEY CASCADE;
DROP TABLE UNDERGRADUATE_STUDENT CASCADE CONSTRAINTS;

CREATE TABLE UNDERGRADUATE_STUDENT
(
  STUDENT_ID  NUMBER(8)                         NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE UTENSIL
 DROP PRIMARY KEY CASCADE;
DROP TABLE UTENSIL CASCADE CONSTRAINTS;

CREATE TABLE UTENSIL
(
  ID    NUMBER(8)                               NOT NULL,
  NAME  VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE WHEEL
 DROP PRIMARY KEY CASCADE;
DROP TABLE WHEEL CASCADE CONSTRAINTS;

CREATE TABLE WHEEL
(
  ID      NUMBER(8)                             NOT NULL,
  RADIUS  NUMBER(8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;



Insert into ADDRESS
   (ID, ZIP)
 Values
   (1, 'Zip1');
Insert into ADDRESS
   (ID, ZIP)
 Values
   (2, 'Zip2');
Insert into ADDRESS
   (ID, ZIP)
 Values
   (3, 'Zip3');
Insert into ADDRESS
   (ID, ZIP)
 Values
   (4, 'Zip4');
Insert into ADDRESS
   (ID, ZIP)
 Values
   (5, 'Zip5');
COMMIT;

Insert into ALBUM
   (ID, TITLE)
 Values
   (1, 'Venetian Oboe Concertos');
Insert into ALBUM
   (ID, TITLE)
 Values
   (2, 'The Cello');
COMMIT;

Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (1, 1);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (1, 2);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (1, 3);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (1, 4);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (1, 5);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (1, 6);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (2, 7);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (2, 8);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (2, 9);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (2, 10);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (2, 11);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (3, 14);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (4, 15);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (6, 17);
Insert into ALBUM_SONG
   (ALBUM_ID, SONG_ID)
 Values
   (7, 18);
COMMIT;

Insert into ALL_DATA_TYPE
   (ID, INT_VALUE, STRING_VALUE, DOUBLE_VALUE, FLOAT_VALUE, 
    DATE_VALUE, BOOLEAN_VALUE, CLOB_VALUE, CHARACTER_VALUE, LONG_VALUE, 
    DOUBLE_PRIMITIVE_VALUE, INT_PRIMITIVE_VALUE, DATE_PRIMITIVE_VALUE, STRING_PRIMITIVE_VALUE, FLOAT_PRIMITIVE_VALUE, 
    BOOLEAN_PRIMITIVE_VALUE, CHARACTER_PRIMITIVE_VALUE, LONG_PRIMITIVE_VALUE)
 Values
   (1, -1, ',./-+/*&&()||==''"%"!\', -1.1, 1.1, 
    TO_DATE('11/11/2011 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 1, '0123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340112340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012', 'a', 1000001, 
    10001, 11, TO_DATE('10/01/2007 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'abc', 10.01, 
    1, 'a', 1000001);
Insert into ALL_DATA_TYPE
   (ID, INT_VALUE, STRING_VALUE, DOUBLE_VALUE, FLOAT_VALUE, 
    DATE_VALUE, BOOLEAN_VALUE, CLOB_VALUE, CHARACTER_VALUE, LONG_VALUE, 
    DOUBLE_PRIMITIVE_VALUE, INT_PRIMITIVE_VALUE, DATE_PRIMITIVE_VALUE, STRING_PRIMITIVE_VALUE, FLOAT_PRIMITIVE_VALUE, 
    BOOLEAN_PRIMITIVE_VALUE, CHARACTER_PRIMITIVE_VALUE, LONG_PRIMITIVE_VALUE)
 Values
   (2, 0, '''Steve''s Test''', 0, 222.22, 
    TO_DATE('12/12/2012 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 0, '0123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340112340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012', 'b', 1000002, 
    10002, 12, TO_DATE('10/02/2007 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'def', 10.02, 
    0, 'b', 1000002);
Insert into ALL_DATA_TYPE
   (ID, INT_VALUE, STRING_VALUE, DOUBLE_VALUE, FLOAT_VALUE, 
    DATE_VALUE, BOOLEAN_VALUE, CLOB_VALUE, CHARACTER_VALUE, LONG_VALUE, 
    DOUBLE_PRIMITIVE_VALUE, INT_PRIMITIVE_VALUE, DATE_PRIMITIVE_VALUE, STRING_PRIMITIVE_VALUE, FLOAT_PRIMITIVE_VALUE, 
    BOOLEAN_PRIMITIVE_VALUE, CHARACTER_PRIMITIVE_VALUE, LONG_PRIMITIVE_VALUE)
 Values
   (3, 1, '~!@#$%^&*()_+-={}|:"<>?[]\;'',./-+/*&&()||==''"%"!\''', 1.1, 333.33, 
    TO_DATE('03/03/2003 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 1, '0123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340112340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012', 'c', 1000003, 
    10003, 13, TO_DATE('10/03/2007 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'ghi', 10.03, 
    1, 'c', 1000003);
Insert into ALL_DATA_TYPE
   (ID, INT_VALUE, STRING_VALUE, DOUBLE_VALUE, FLOAT_VALUE, 
    DATE_VALUE, BOOLEAN_VALUE, CLOB_VALUE, CHARACTER_VALUE, LONG_VALUE, 
    DOUBLE_PRIMITIVE_VALUE, INT_PRIMITIVE_VALUE, DATE_PRIMITIVE_VALUE, STRING_PRIMITIVE_VALUE, FLOAT_PRIMITIVE_VALUE, 
    BOOLEAN_PRIMITIVE_VALUE, CHARACTER_PRIMITIVE_VALUE, LONG_PRIMITIVE_VALUE)
 Values
   (4, 10000, '01234567890123456789012345678901234567890123456789', 10000, 444.44, 
    TO_DATE('04/04/2004 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 0, '0123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340112340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012', 'd', 1000004, 
    10004, 14, TO_DATE('10/04/2007 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'jkl', 10.04, 
    0, 'd', 1000004);
Insert into ALL_DATA_TYPE
   (ID, INT_VALUE, STRING_VALUE, DOUBLE_VALUE, FLOAT_VALUE, 
    DATE_VALUE, BOOLEAN_VALUE, CLOB_VALUE, CHARACTER_VALUE, LONG_VALUE, 
    DOUBLE_PRIMITIVE_VALUE, INT_PRIMITIVE_VALUE, DATE_PRIMITIVE_VALUE, STRING_PRIMITIVE_VALUE, FLOAT_PRIMITIVE_VALUE, 
    BOOLEAN_PRIMITIVE_VALUE, CHARACTER_PRIMITIVE_VALUE, LONG_PRIMITIVE_VALUE)
 Values
   (5, 5, 'String_Value5', 555.55, 555.55, 
    TO_DATE('05/05/2005 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 1, '0123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340112340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012340123456789012', 'e', 1000005, 
    10005, 15, TO_DATE('10/05/2007 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'mno', 10.05, 
    1, 'e', 1000005);
COMMIT;

Insert into ALL_DATA_TYPE_STRING_COLL
   (ALL_DATA_TYPE_ID, STRING_VALUE)
 Values
   (1, 'String_Collection 1');
Insert into ALL_DATA_TYPE_STRING_COLL
   (ALL_DATA_TYPE_ID, STRING_VALUE)
 Values
   (1, 'String_Collection 2');
Insert into ALL_DATA_TYPE_STRING_COLL
   (ALL_DATA_TYPE_ID, STRING_VALUE)
 Values
   (1, 'String_Collection 3');
COMMIT;

Insert into ALL_VALIDATION_TYPE
   (ID, EMAIL, FUTURE, LENGTH, MAX_NUMERIC, 
    PAST, MAX_STRING, MIN_NUMERIC, MIN_STRING, NOT_EMPTY, 
    NOT_NULL, RANGE_STRING, RANGE_NUMERIC, PATTERN)
 Values
   (1, 'name@mail.nih.gov', TO_DATE('05/15/2008 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), '123', 999, 
    NULL, '999', 1, '1', 'abc', 
    'abc', '3', 3, 'cat');
COMMIT;

Insert into ASSISTANT
   (ID, NAME, PROFESSOR_ID)
 Values
   (1, 'Assistant_Name1', 1);
Insert into ASSISTANT
   (ID, NAME, PROFESSOR_ID)
 Values
   (2, 'Assistant_Name2', 2);
Insert into ASSISTANT
   (ID, NAME, PROFESSOR_ID)
 Values
   (3, 'Assistant_Name3', 3);
Insert into ASSISTANT
   (ID, NAME, PROFESSOR_ID)
 Values
   (4, 'Assistant_Name4', 6);
Insert into ASSISTANT
   (ID, NAME, PROFESSOR_ID)
 Values
   (5, 'Assistant_Name5', 7);
Insert into ASSISTANT
   (ID, NAME, PROFESSOR_ID)
 Values
   (6, 'Assistant_Name6', 7);
Insert into ASSISTANT
   (ID, NAME, PROFESSOR_ID)
 Values
   (7, 'Assistant_Name7', 11);
Insert into ASSISTANT
   (ID, NAME, PROFESSOR_ID)
 Values
   (8, 'Assistant_Name8', 12);
Insert into ASSISTANT
   (ID, NAME, PROFESSOR_ID)
 Values
   (9, 'Assistant_Name9', 12);
COMMIT;

Insert into ASSISTANT_PROFESSOR
   (PROFESSOR_ID, JOINING_YEAR)
 Values
   (11, 11);
Insert into ASSISTANT_PROFESSOR
   (PROFESSOR_ID, JOINING_YEAR)
 Values
   (12, 12);
Insert into ASSISTANT_PROFESSOR
   (PROFESSOR_ID, JOINING_YEAR)
 Values
   (13, 13);
Insert into ASSISTANT_PROFESSOR
   (PROFESSOR_ID, JOINING_YEAR)
 Values
   (14, 14);
Insert into ASSISTANT_PROFESSOR
   (PROFESSOR_ID, JOINING_YEAR)
 Values
   (15, 15);
COMMIT;

Insert into ASSOCIATE_PROFESSOR
   (PROFESSOR_ID, YEARS_SERVED)
 Values
   (6, 6);
Insert into ASSOCIATE_PROFESSOR
   (PROFESSOR_ID, YEARS_SERVED)
 Values
   (7, 7);
Insert into ASSOCIATE_PROFESSOR
   (PROFESSOR_ID, YEARS_SERVED)
 Values
   (8, 8);
Insert into ASSOCIATE_PROFESSOR
   (PROFESSOR_ID, YEARS_SERVED)
 Values
   (9, 9);
Insert into ASSOCIATE_PROFESSOR
   (PROFESSOR_ID, YEARS_SERVED)
 Values
   (10, 10);
COMMIT;

Insert into AUTHOR
   (ID, NAME)
 Values
   (1, 'Author1');
Insert into AUTHOR
   (ID, NAME)
 Values
   (2, 'Author2');
Insert into AUTHOR
   (ID, NAME)
 Values
   (3, 'Author3');
Insert into AUTHOR
   (ID, NAME)
 Values
   (4, 'Author4');
Insert into AUTHOR
   (ID, NAME)
 Values
   (5, 'Author5');
COMMIT;

Insert into AUTHOR_BOOK
   (AUTHOR_ID, BOOK_ID)
 Values
   (1, 1);
Insert into AUTHOR_BOOK
   (AUTHOR_ID, BOOK_ID)
 Values
   (2, 2);
Insert into AUTHOR_BOOK
   (AUTHOR_ID, BOOK_ID)
 Values
   (3, 3);
COMMIT;

Insert into BAG
   (ID, STYLE)
 Values
   (1, 'Baguettes');
Insert into BAG
   (ID, STYLE)
 Values
   (2, 'Barrel');
Insert into BAG
   (ID, STYLE)
 Values
   (3, 'Beach');
Insert into BAG
   (ID, STYLE)
 Values
   (4, 'Bowler');
Insert into BAG
   (ID, STYLE)
 Values
   (5, 'Bucket');
Insert into BAG
   (ID, STYLE)
 Values
   (6, 'Duffel');
Insert into BAG
   (ID, STYLE)
 Values
   (7, 'Evening');
Insert into BAG
   (ID, STYLE)
 Values
   (8, 'Flap');
Insert into BAG
   (ID, STYLE)
 Values
   (9, 'Hobos');
Insert into BAG
   (ID, STYLE)
 Values
   (10, 'Pochettes');
Insert into BAG
   (ID, STYLE)
 Values
   (11, 'Satchel');
COMMIT;

Insert into BAG_HANDLE
   (BAG_ID, HANDLE_ID)
 Values
   (1, 1);
Insert into BAG_HANDLE
   (BAG_ID, HANDLE_ID)
 Values
   (2, 2);
Insert into BAG_HANDLE
   (BAG_ID, HANDLE_ID)
 Values
   (3, 3);
Insert into BAG_HANDLE
   (BAG_ID, HANDLE_ID)
 Values
   (4, 4);
Insert into BAG_HANDLE
   (BAG_ID, HANDLE_ID)
 Values
   (5, 5);
Insert into BAG_HANDLE
   (BAG_ID, HANDLE_ID)
 Values
   (6, 6);
Insert into BAG_HANDLE
   (BAG_ID, HANDLE_ID)
 Values
   (7, 7);
Insert into BAG_HANDLE
   (BAG_ID, HANDLE_ID)
 Values
   (8, 8);
Insert into BAG_HANDLE
   (BAG_ID, HANDLE_ID)
 Values
   (9, 9);
Insert into BAG_HANDLE
   (BAG_ID, HANDLE_ID)
 Values
   (10, 10);
COMMIT;

Insert into BANK
   (ID, NAME)
 Values
   (1, 'Bank1');
Insert into BANK
   (ID, NAME)
 Values
   (2, 'Bank2');
Insert into BANK
   (ID, NAME)
 Values
   (3, 'Bank3');
Insert into BANK
   (ID, NAME)
 Values
   (4, 'Bank4');
COMMIT;

Insert into BOOK
   (ID, NAME)
 Values
   (1, 'Book1');
Insert into BOOK
   (ID, NAME)
 Values
   (2, 'Book2');
Insert into BOOK
   (ID, NAME)
 Values
   (3, 'Book3');
Insert into BOOK
   (ID, NAME)
 Values
   (4, 'Book4');
Insert into BOOK
   (ID, NAME)
 Values
   (5, 'Book5');
COMMIT;

Insert into BRIDE
   (ID, NAME)
 Values
   (1, 'Bride 1');
Insert into BRIDE
   (ID, NAME)
 Values
   (2, 'Bride 2');
Insert into BRIDE
   (ID, NAME)
 Values
   (3, 'Bride 3');
Insert into BRIDE
   (ID, NAME)
 Values
   (4, 'Bride 4');
COMMIT;

Insert into BRIDE_FATHER_IN_LAW
   (BRIDE_ID, IN_LAW_ID)
 Values
   (1, 1);
Insert into BRIDE_FATHER_IN_LAW
   (BRIDE_ID, IN_LAW_ID)
 Values
   (2, 3);
COMMIT;

Insert into BRIDE_MOTHER_IN_LAW
   (BRIDE_D, IN_LAW_ID)
 Values
   (1, 2);
Insert into BRIDE_MOTHER_IN_LAW
   (BRIDE_D, IN_LAW_ID)
 Values
   (3, 5);
COMMIT;

Insert into BUTTON
   (ID, HOLES)
 Values
   (1, 2);
Insert into BUTTON
   (ID, HOLES)
 Values
   (2, 4);
COMMIT;

Insert into CALCULATOR
   (ID, DISCRIMINATOR, BRAND)
 Values
   (1, 'financial', 'NCR');
Insert into CALCULATOR
   (ID, DISCRIMINATOR, BRAND)
 Values
   (2, 'scientific', 'Texas Instruments');
Insert into CALCULATOR
   (ID, DISCRIMINATOR, BRAND)
 Values
   (3, 'graphics', 'HP');
COMMIT;

Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (4, 'Four', 1, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (53, 'Joker', NULL, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (1, 'Ace', 1, 'My Ace');
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (2, 'Two', 1, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (3, 'Three', 1, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (5, 'Five', 1, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (6, 'Six', 1, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (7, 'Seven', 1, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (8, 'Eight', 1, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (9, 'Nine', 1, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (10, 'Ten', 1, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (11, 'Jack', 1, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (12, 'Queen', 1, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (13, 'King', 1, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (14, 'Ace', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (15, 'Two', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (16, 'Three', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (17, 'Four', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (18, 'Five', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (19, 'Six', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (20, 'Seven', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (21, 'Eight', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (22, 'Nine', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (23, 'Ten', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (24, 'Jack', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (25, 'Queen', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (26, 'King', 2, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (27, 'Ace', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (28, 'Two', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (29, 'Three', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (30, 'Four', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (31, 'Five', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (32, 'Six', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (33, 'Seven', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (34, 'Eight', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (35, 'Nine', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (36, 'Ten', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (37, 'Jack', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (38, 'Queen', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (39, 'King', 3, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (40, 'Ace', 4, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (41, 'Two', 4, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (42, 'Three', 4, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (43, 'Four', 4, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (44, 'Five', 4, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (45, 'Six', 4, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (46, 'Seven', 4, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (47, 'Eight', 4, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (48, 'Nine', 4, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (49, 'Ten', 4, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (50, 'Jack', 4, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (51, 'Queen', 4, NULL);
Insert into CARD
   (ID, NAME, SUIT_ID, IMAGE)
 Values
   (52, 'King', 4, NULL);
COMMIT;

Insert into CASH
   (PAYMENT_ID)
 Values
   (1);
Insert into CASH
   (PAYMENT_ID)
 Values
   (2);
COMMIT;

Insert into CHAIN
   (ID, METAL)
 Values
   (1, 'Gold');
Insert into CHAIN
   (ID, METAL)
 Values
   (2, 'Silver');
Insert into CHAIN
   (ID, METAL)
 Values
   (3, 'Bronze');
COMMIT;

Insert into CHAIN_PENDANT
   (CHAIN_ID, PENDANT_ID)
 Values
   (1, 1);
Insert into CHAIN_PENDANT
   (CHAIN_ID, PENDANT_ID)
 Values
   (2, 2);
COMMIT;

Insert into CHARACTER_KEY
   (ID, NAME)
 Values
   ('a', 'CharacterKey_Name a');
Insert into CHARACTER_KEY
   (ID, NAME)
 Values
   ('B', 'CharacterKey_Name B');
Insert into CHARACTER_KEY
   (ID, NAME)
 Values
   (';', 'CharacterKey _Name;');
Insert into CHARACTER_KEY
   (ID, NAME)
 Values
   ('9', 'CharacterKey_Name 9');
COMMIT;

Insert into CHARACTER_PRIMITIVE_KEY
   (ID, NAME)
 Values
   ('d', 'Character_Primitive_Key_Name d');
Insert into CHARACTER_PRIMITIVE_KEY
   (ID, NAME)
 Values
   ('6', 'Character_Primitive_Key_Name 6');
Insert into CHARACTER_PRIMITIVE_KEY
   (ID, NAME)
 Values
   ('[', 'Character_Primitive_Key_Name [');
Insert into CHARACTER_PRIMITIVE_KEY
   (ID, NAME)
 Values
   ('L', 'Character_Primitive_Key_Name L');
COMMIT;

Insert into CHEF
   (ID, NAME, RESTAURANT_ID)
 Values
   (4, 'Chef4', NULL);
Insert into CHEF
   (ID, NAME, RESTAURANT_ID)
 Values
   (1, 'Chef1', 1);
Insert into CHEF
   (ID, NAME, RESTAURANT_ID)
 Values
   (2, 'Chef2', 2);
Insert into CHEF
   (ID, NAME, RESTAURANT_ID)
 Values
   (3, 'Chef3', 2);
COMMIT;

Insert into CHILD
   (ID, NAME, FATHER_ID, MOTHER_ID)
 Values
   (5, 'Child_Name5', NULL, NULL);
Insert into CHILD
   (ID, NAME, FATHER_ID, MOTHER_ID)
 Values
   (1, 'Child_Name1', 1, 2);
Insert into CHILD
   (ID, NAME, FATHER_ID, MOTHER_ID)
 Values
   (2, 'Child_Name2', 3, 4);
Insert into CHILD
   (ID, NAME, FATHER_ID, MOTHER_ID)
 Values
   (3, 'Child_Name3', 5, NULL);
Insert into CHILD
   (ID, NAME, FATHER_ID, MOTHER_ID)
 Values
   (4, 'Child_Name4', NULL, 6);
COMMIT;

Insert into COMPUTER
   (ID, TYPE)
 Values
   (1, 'Computer_Type1');
Insert into COMPUTER
   (ID, TYPE)
 Values
   (2, 'Computer_Type2');
Insert into COMPUTER
   (ID, TYPE)
 Values
   (3, 'Computer_Type3');
Insert into COMPUTER
   (ID, TYPE)
 Values
   (4, 'Computer_Type4');
Insert into COMPUTER
   (ID, TYPE)
 Values
   (5, 'Computer_Type5');
COMMIT;

Insert into CREDIT
   (PAYMENT_ID, CARD_NUMBER, BANK_ID)
 Values
   (3, '3', 3);
Insert into CREDIT
   (PAYMENT_ID, CARD_NUMBER, BANK_ID)
 Values
   (4, '4', 4);
COMMIT;

Insert into CRT_MONITOR
   (MONITOR_ID, REFRESH_RATE)
 Values
   (1, 45);
COMMIT;

Insert into CURRENCY
   (ID, DISCRIMINATOR, COUNTRY, VALUE)
 Values
   (1, 'Note', 'USA', 1);
Insert into CURRENCY
   (ID, DISCRIMINATOR, COUNTRY, VALUE)
 Values
   (2, 'Note', 'Germany', 2);
Insert into CURRENCY
   (ID, DISCRIMINATOR, COUNTRY, VALUE)
 Values
   (3, 'Note', 'Spain', 3);
COMMIT;

Insert into DECK
   (ID, NAME)
 Values
   (1, 'My Deck 1');
COMMIT;

Insert into DESIGNER
   (ID, NAME)
 Values
   (1, 'Gucci');
Insert into DESIGNER
   (ID, NAME)
 Values
   (2, 'Prada');
Insert into DESIGNER
   (ID, NAME)
 Values
   (3, 'Sergio Rossi');
COMMIT;

Insert into DESSERT
   (ID, TOPPING, FILLING, DISCRIMINATOR)
 Values
   (1, 'Peanuts', NULL, 'IceCream');
Insert into DESSERT
   (ID, TOPPING, FILLING, DISCRIMINATOR)
 Values
   (2, 'Sprinkles', NULL, 'IceCream');
Insert into DESSERT
   (ID, TOPPING, FILLING, DISCRIMINATOR)
 Values
   (3, NULL, 'Apples', 'Pie');
Insert into DESSERT
   (ID, TOPPING, FILLING, DISCRIMINATOR)
 Values
   (4, NULL, 'Cherries', 'Pie');
COMMIT;

Insert into DESSERT_UTENSIL
   (DESSERT_ID, UTENSIL_ID)
 Values
   (1, 1);
Insert into DESSERT_UTENSIL
   (DESSERT_ID, UTENSIL_ID)
 Values
   (1, 3);
Insert into DESSERT_UTENSIL
   (DESSERT_ID, UTENSIL_ID)
 Values
   (2, 2);
Insert into DESSERT_UTENSIL
   (DESSERT_ID, UTENSIL_ID)
 Values
   (3, 1);
Insert into DESSERT_UTENSIL
   (DESSERT_ID, UTENSIL_ID)
 Values
   (3, 2);
Insert into DESSERT_UTENSIL
   (DESSERT_ID, UTENSIL_ID)
 Values
   (4, 2);
Insert into DESSERT_UTENSIL
   (DESSERT_ID, UTENSIL_ID)
 Values
   (4, 3);
COMMIT;

Insert into DISPLAY
   (ID, WIDTH, HEIGHT)
 Values
   (1, 1, 1);
Insert into DISPLAY
   (ID, WIDTH, HEIGHT)
 Values
   (2, 2, 2);
Insert into DISPLAY
   (ID, WIDTH, HEIGHT)
 Values
   (3, 3, 3);
Insert into DISPLAY
   (ID, WIDTH, HEIGHT)
 Values
   (4, 4, 4);
Insert into DISPLAY
   (ID, WIDTH, HEIGHT)
 Values
   (5, 5, 5);
COMMIT;

Insert into DOG
   (ID, BREED, GENDER)
 Values
   (1, 'Poodle', 'Male');
Insert into DOG
   (ID, BREED, GENDER)
 Values
   (2, 'Chihuahua', 'Female');
Insert into DOG
   (ID, BREED, GENDER)
 Values
   (3, 'St. Bernard', 'Male');
COMMIT;

Insert into DOUBLE_KEY
   (ID, NAME)
 Values
   (1.1, 'Double_Key_Name1.1');
Insert into DOUBLE_KEY
   (ID, NAME)
 Values
   (2.2, 'Double_Key_Name2.2');
Insert into DOUBLE_KEY
   (ID, NAME)
 Values
   (3.3, 'Double_Key_Name3.3');
Insert into DOUBLE_KEY
   (ID, NAME)
 Values
   (4.4, 'Double_Key_Name4.4');
Insert into DOUBLE_KEY
   (ID, NAME)
 Values
   (5.5, 'Double_Key_Name5.5');
COMMIT;

Insert into DOUBLE_PRIMITIVE_KEY
   (ID, NAME)
 Values
   (1.1, 'Double_Primitive_Key 1.1');
Insert into DOUBLE_PRIMITIVE_KEY
   (ID, NAME)
 Values
   (2.2, 'Double_Primitive_Key 2.2');
COMMIT;

Insert into ELEMENT
   (ID, NAME, PARENT_ELEMENT_ID)
 Values
   (3, 'Element', NULL);
Insert into ELEMENT
   (ID, NAME, PARENT_ELEMENT_ID)
 Values
   (4, 'Element', NULL);
Insert into ELEMENT
   (ID, NAME, PARENT_ELEMENT_ID)
 Values
   (1, 'Name1', NULL);
Insert into ELEMENT
   (ID, NAME, PARENT_ELEMENT_ID)
 Values
   (2, 'Name2', 1);
COMMIT;

Insert into EMPLOYEE
   (ID, NAME)
 Values
   (1, 'Employee_Name1');
Insert into EMPLOYEE
   (ID, NAME)
 Values
   (2, 'Employee_Name2');
Insert into EMPLOYEE
   (ID, NAME)
 Values
   (3, 'Employee_Name3');
Insert into EMPLOYEE
   (ID, NAME)
 Values
   (4, 'Employee_Name4');
Insert into EMPLOYEE
   (ID, NAME)
 Values
   (5, 'Employee_Name5');
Insert into EMPLOYEE
   (ID, NAME)
 Values
   (6, 'Employee_Name6');
Insert into EMPLOYEE
   (ID, NAME)
 Values
   (7, 'Employee_Name7');
Insert into EMPLOYEE
   (ID, NAME)
 Values
   (8, 'Employee_Name8');
Insert into EMPLOYEE
   (ID, NAME)
 Values
   (9, 'Employee_Name9');
Insert into EMPLOYEE
   (ID, NAME)
 Values
   (10, 'Employee_Name10');
COMMIT;

Insert into EMPLOYEE_PROJECT
   (EMPLOYEE_ID, PROJECT_ID)
 Values
   (1, 1);
Insert into EMPLOYEE_PROJECT
   (EMPLOYEE_ID, PROJECT_ID)
 Values
   (2, 2);
Insert into EMPLOYEE_PROJECT
   (EMPLOYEE_ID, PROJECT_ID)
 Values
   (3, 2);
Insert into EMPLOYEE_PROJECT
   (EMPLOYEE_ID, PROJECT_ID)
 Values
   (4, 4);
Insert into EMPLOYEE_PROJECT
   (EMPLOYEE_ID, PROJECT_ID)
 Values
   (4, 5);
Insert into EMPLOYEE_PROJECT
   (EMPLOYEE_ID, PROJECT_ID)
 Values
   (6, 5);
COMMIT;

Insert into FISH
   (ID, GENERA, PRIMARY_COLOR, FIN_SIZE, DISCRIMINATOR, 
    TANK_ID, TANK_DISCRIMINATOR)
 Values
   (1, 'Hemichromis', 'blue', NULL, 'DiscusFish', 
    1, 'FreshwaterFishTank');
Insert into FISH
   (ID, GENERA, PRIMARY_COLOR, FIN_SIZE, DISCRIMINATOR, 
    TANK_ID, TANK_DISCRIMINATOR)
 Values
   (2, 'Hemichromis', 'red', NULL, 'DiscusFish', 
    2, 'FreshwaterFishTank');
Insert into FISH
   (ID, GENERA, PRIMARY_COLOR, FIN_SIZE, DISCRIMINATOR, 
    TANK_ID, TANK_DISCRIMINATOR)
 Values
   (3, 'Pterophyllum', NULL, 3, 'AngelFish', 
    3, 'SaltwaterFishTank');
Insert into FISH
   (ID, GENERA, PRIMARY_COLOR, FIN_SIZE, DISCRIMINATOR, 
    TANK_ID, TANK_DISCRIMINATOR)
 Values
   (4, 'Pterophyllum', NULL, 5, 'AngelFish', 
    4, 'SaltwaterFishTank');
COMMIT;

Insert into FLIGHT
   (ID, DESTINATION)
 Values
   (1, 'Baltimore, MD');
Insert into FLIGHT
   (ID, DESTINATION)
 Values
   (2, 'San Francisco, CA');
Insert into FLIGHT
   (ID, DESTINATION)
 Values
   (3, 'Maui, HI');
COMMIT;

Insert into FLIGHT_PASSANGER
   (FLIGHT_ID, PASSANGER_ID)
 Values
   (1, 1);
Insert into FLIGHT_PASSANGER
   (FLIGHT_ID, PASSANGER_ID)
 Values
   (1, 2);
COMMIT;

Insert into FLOAT_KEY
   (ID, NAME)
 Values
   (1.1, 'Float_Key_Name1.1');
Insert into FLOAT_KEY
   (ID, NAME)
 Values
   (2.2, 'Float_Key_Name2.2');
Insert into FLOAT_KEY
   (ID, NAME)
 Values
   (3.3, 'Float_Key_Name3.3');
Insert into FLOAT_KEY
   (ID, NAME)
 Values
   (4.4, 'Float_Key_Name4.4');
Insert into FLOAT_KEY
   (ID, NAME)
 Values
   (5.5, 'Float_Key_Name5.5');
COMMIT;

Insert into FLOAT_PRIMITIVE_KEY
   (ID, NAME)
 Values
   (1.1, 'Float_Key_Name 1.1');
Insert into FLOAT_PRIMITIVE_KEY
   (ID, NAME)
 Values
   (2.2, 'Float_Key_Name 2.2');
Insert into FLOAT_PRIMITIVE_KEY
   (ID, NAME)
 Values
   (3.3, 'Float_Key_Name 3.3');
COMMIT;

Insert into FRESHWATER_FISH_TANK
   (ID, SHAPE, NUM_GALLONS, FILTER_MODEL)
 Values
   (1, 'Rectangular', 10, '350B Penguin Bio-Wheel Filter');
Insert into FRESHWATER_FISH_TANK
   (ID, SHAPE, NUM_GALLONS, FILTER_MODEL)
 Values
   (2, 'Hexagonal', 7, '200B Penguin Bio-Wheel Filter');
COMMIT;

Insert into GOVERMENT
   (ID, DISCRIMINATOR, COUNTRY, PRIME_MINISTER, PRESIDENT, 
    DEMOCRATIC_DISCRIMINATOR)
 Values
   (1, 'PresidentialGovt', 'USA', NULL, 'George W. Bush', 
    NULL);
Insert into GOVERMENT
   (ID, DISCRIMINATOR, COUNTRY, PRIME_MINISTER, PRESIDENT, 
    DEMOCRATIC_DISCRIMINATOR)
 Values
   (2, 'ParliamantaryGovt', 'England', 'Tony Blair', NULL, 
    NULL);
Insert into GOVERMENT
   (ID, DISCRIMINATOR, COUNTRY, PRIME_MINISTER, PRESIDENT, 
    DEMOCRATIC_DISCRIMINATOR)
 Values
   (3, 'CommunistGovt', 'Cuba', NULL, NULL, 
    NULL);
COMMIT;

Insert into GRADUATE_STUDENT
   (STUDENT_ID, PROJECT_NAME)
 Values
   (6, 'Project_Name6');
Insert into GRADUATE_STUDENT
   (STUDENT_ID, PROJECT_NAME)
 Values
   (7, 'Project_Name7');
Insert into GRADUATE_STUDENT
   (STUDENT_ID, PROJECT_NAME)
 Values
   (8, 'Project_Name8');
Insert into GRADUATE_STUDENT
   (STUDENT_ID, PROJECT_NAME)
 Values
   (9, 'Project_Name9');
Insert into GRADUATE_STUDENT
   (STUDENT_ID, PROJECT_NAME)
 Values
   (10, 'Project_Name10');
COMMIT;

Insert into GRAPHIC_CALCULATOR
   (CALCULATOR_ID)
 Values
   (3);
COMMIT;

Insert into HAND
   (ID)
 Values
   (1);
Insert into HAND
   (ID)
 Values
   (2);
Insert into HAND
   (ID)
 Values
   (3);
Insert into HAND
   (ID)
 Values
   (4);
Insert into HAND
   (ID)
 Values
   (5);
COMMIT;

Insert into HANDLE
   (ID, COLOR)
 Values
   (1, 'Black');
Insert into HANDLE
   (ID, COLOR)
 Values
   (2, 'Brown');
Insert into HANDLE
   (ID, COLOR)
 Values
   (3, 'Blue');
Insert into HANDLE
   (ID, COLOR)
 Values
   (4, 'White');
Insert into HANDLE
   (ID, COLOR)
 Values
   (5, 'Red');
Insert into HANDLE
   (ID, COLOR)
 Values
   (6, 'Yellow');
Insert into HANDLE
   (ID, COLOR)
 Values
   (7, 'Green');
Insert into HANDLE
   (ID, COLOR)
 Values
   (8, 'Beige');
Insert into HANDLE
   (ID, COLOR)
 Values
   (9, 'Purple');
Insert into HANDLE
   (ID, COLOR)
 Values
   (10, 'Orange');
Insert into HANDLE
   (ID, COLOR)
 Values
   (11, 'Teal');
Insert into HANDLE
   (ID, COLOR)
 Values
   (12, 'Burgundy');
COMMIT;

Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (1, 1);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (1, 25);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (1, 52);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (2, 2);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (2, 3);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (2, 5);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (3, 6);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (3, 14);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (3, 15);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (4, 26);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (4, 27);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (4, 30);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (5, 39);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (5, 40);
Insert into HAND_CARD
   (HAND_ID, CARD_ID)
 Values
   (5, 41);
COMMIT;

Insert into HARD_DRIVE
   (ID, DRIVE_SIZE, COMPUTER_ID)
 Values
   (1, 1, 1);
Insert into HARD_DRIVE
   (ID, DRIVE_SIZE, COMPUTER_ID)
 Values
   (2, 2, 2);
Insert into HARD_DRIVE
   (ID, DRIVE_SIZE, COMPUTER_ID)
 Values
   (3, 3, 2);
COMMIT;

Insert into HIBERNATE_UNIQUE_KEY
   (NEXT_HI)
 Values
   (545);
COMMIT;

Insert into HI_VALUE
   (NEXT_VALUE)
 Values
   (6);
COMMIT;

Insert into HUMAN
   (MAMMAL_ID, DIET)
 Values
   (1, 'DIET1');
Insert into HUMAN
   (MAMMAL_ID, DIET)
 Values
   (2, 'DIET2');
Insert into HUMAN
   (MAMMAL_ID, DIET)
 Values
   (3, 'DIET3');
Insert into HUMAN
   (MAMMAL_ID, DIET)
 Values
   (4, 'DIET4');
COMMIT;

Insert into INTEGER_KEY
   (ID, NAME)
 Values
   (1, 'Integer_Key_Name1');
Insert into INTEGER_KEY
   (ID, NAME)
 Values
   (2, 'Integer_Key_Name2');
Insert into INTEGER_KEY
   (ID, NAME)
 Values
   (3, 'Integer_Key_Name3');
Insert into INTEGER_KEY
   (ID, NAME)
 Values
   (4, 'Integer_Key_Name4');
Insert into INTEGER_KEY
   (ID, NAME)
 Values
   (5, 'Integer_Key_Name5');
COMMIT;

Insert into INTEGER_PRIMITIVE_KEY
   (ID, NAME)
 Values
   (1, 'Integer_Primitive_Key_Name 1');
Insert into INTEGER_PRIMITIVE_KEY
   (ID, NAME)
 Values
   (2, 'Integer_Primitive_Key_Name 2');
COMMIT;

Insert into IN_LAW
   (ID, NAME)
 Values
   (1, ' Father-in-Law Bride 1');
Insert into IN_LAW
   (ID, NAME)
 Values
   (2, 'Mother-in-Law Bride 1');
Insert into IN_LAW
   (ID, NAME)
 Values
   (3, 'Father-in-Law Bride 2');
Insert into IN_LAW
   (ID, NAME)
 Values
   (5, 'Mother-in-Law Bride 3');
COMMIT;

Insert into KEYCHAIN
   (ID, NAME)
 Values
   (1, 'Keychain_Name1');
Insert into KEYCHAIN
   (ID, NAME)
 Values
   (2, 'Keychain_Name2');
Insert into KEYCHAIN
   (ID, NAME)
 Values
   (3, 'Keychain_Name3');
Insert into KEYCHAIN
   (ID, NAME)
 Values
   (4, 'Keychain_Name4');
Insert into KEYCHAIN
   (ID, NAME)
 Values
   (5, 'Keychain_Name5');
COMMIT;

Insert into LATCH_KEY
   (ID, TYPE, KEYCHAIN_ID)
 Values
   (1, 'Key_Type1', 1);
Insert into LATCH_KEY
   (ID, TYPE, KEYCHAIN_ID)
 Values
   (2, 'Key_Type2', 2);
Insert into LATCH_KEY
   (ID, TYPE, KEYCHAIN_ID)
 Values
   (3, 'Key_Type3', 2);
COMMIT;

Insert into LCD_MONITOR
   (MONITOR_ID, DPI_SUPPORTED)
 Values
   (2, 2323);
Insert into LCD_MONITOR
   (MONITOR_ID, DPI_SUPPORTED)
 Values
   (3, 1212);
COMMIT;

Insert into LONG_KEY
   (ID, NAME)
 Values
   (1234, 'Long_123456789');
COMMIT;

Insert into LONG_PRIMITIVE_KEY
   (ID, NAME)
 Values
   (9876, 'Long_Primitive_Key_NAME 987654321234567890');
COMMIT;

Insert into LUGGAGE
   (ID, DISCRIMINATOR, CAPACITY, KEY_CODE, EXPANDABLE, 
    WHEEL_ID)
 Values
   (1, 'HardTop', 75, 627, NULL, 
    1);
Insert into LUGGAGE
   (ID, DISCRIMINATOR, CAPACITY, KEY_CODE, EXPANDABLE, 
    WHEEL_ID)
 Values
   (2, 'HardTop', 75, 985, NULL, 
    3);
Insert into LUGGAGE
   (ID, DISCRIMINATOR, CAPACITY, KEY_CODE, EXPANDABLE, 
    WHEEL_ID)
 Values
   (3, 'SoftTop', 55, NULL, '1', 
    1);
Insert into LUGGAGE
   (ID, DISCRIMINATOR, CAPACITY, KEY_CODE, EXPANDABLE, 
    WHEEL_ID)
 Values
   (4, 'SoftTop', 35, NULL, '0', 
    2);
Insert into LUGGAGE
   (ID, DISCRIMINATOR, CAPACITY, KEY_CODE, EXPANDABLE, 
    WHEEL_ID)
 Values
   (5, 'HardTopType', 100, 890, NULL, 
    1);
COMMIT;

Insert into MAMMAL
   (ID, HAIR_COLOR)
 Values
   (1, 'Hair_Color1');
Insert into MAMMAL
   (ID, HAIR_COLOR)
 Values
   (2, 'Hair_Color2');
Insert into MAMMAL
   (ID, HAIR_COLOR)
 Values
   (3, 'Hair_Color3');
Insert into MAMMAL
   (ID, HAIR_COLOR)
 Values
   (4, 'Hair_Color4');
Insert into MAMMAL
   (ID, HAIR_COLOR)
 Values
   (5, 'Hair_Color5');
COMMIT;

Insert into MONITOR
   (DISPLAY_ID, BRAND)
 Values
   (1, 'A');
Insert into MONITOR
   (DISPLAY_ID, BRAND)
 Values
   (2, 'B');
Insert into MONITOR
   (DISPLAY_ID, BRAND)
 Values
   (3, 'C');
Insert into MONITOR
   (DISPLAY_ID, BRAND)
 Values
   (4, 'D');
COMMIT;

Insert into NO_ID_KEY
   (MY_KEY, NAME)
 Values
   (1, 'NoIdKey 1');
Insert into NO_ID_KEY
   (MY_KEY, NAME)
 Values
   (2, 'NoIdKey 2');
COMMIT;

Insert into ORDERLINE
   (ID, NAME)
 Values
   (1, 'Orderline_Name1');
Insert into ORDERLINE
   (ID, NAME)
 Values
   (2, 'Orderline_Name2');
Insert into ORDERLINE
   (ID, NAME)
 Values
   (3, 'Orderline_Name3');
Insert into ORDERLINE
   (ID, NAME)
 Values
   (4, 'Orderline_Name4');
Insert into ORDERLINE
   (ID, NAME)
 Values
   (5, 'Orderline_Name5');
COMMIT;

Insert into ORGANIZATION
   (ID, DISCRIMINATOR, NAME, AGENCY_BUDGET, CEO)
 Values
   (1, 'govt', 'Public Org Name', 1000, NULL);
Insert into ORGANIZATION
   (ID, DISCRIMINATOR, NAME, AGENCY_BUDGET, CEO)
 Values
   (2, 'pvt', 'Private Org Name', NULL, 'Private CEO Name');
COMMIT;

Insert into PARENT
   (ID, NAME)
 Values
   (1, 'Parent_Name1');
Insert into PARENT
   (ID, NAME)
 Values
   (2, 'Parent_Name2');
Insert into PARENT
   (ID, NAME)
 Values
   (3, 'Parent_Name3');
Insert into PARENT
   (ID, NAME)
 Values
   (4, 'Parent_Name4');
Insert into PARENT
   (ID, NAME)
 Values
   (5, 'Parent_Name5');
Insert into PARENT
   (ID, NAME)
 Values
   (6, 'Parent_Name6');
Insert into PARENT
   (ID, NAME)
 Values
   (7, 'Parent_Name7');
Insert into PARENT
   (ID, NAME)
 Values
   (8, 'Parent_Name8');
Insert into PARENT
   (ID, NAME)
 Values
   (9, 'Parent_Name9');
Insert into PARENT
   (ID, NAME)
 Values
   (10, 'Parent_Name10');
COMMIT;

Insert into PASSANGER
   (ID, NAME)
 Values
   (1, 'John Doe');
Insert into PASSANGER
   (ID, NAME)
 Values
   (2, 'Jane Doe');
COMMIT;

Insert into PAYMENT
   (ID, AMOUNT)
 Values
   (1, 1);
Insert into PAYMENT
   (ID, AMOUNT)
 Values
   (2, 2);
Insert into PAYMENT
   (ID, AMOUNT)
 Values
   (3, 3);
Insert into PAYMENT
   (ID, AMOUNT)
 Values
   (4, 4);
Insert into PAYMENT
   (ID, AMOUNT)
 Values
   (5, 5);
COMMIT;

Insert into PENDANT
   (ID, SHAPE)
 Values
   (1, 'Circle Pearl');
Insert into PENDANT
   (ID, SHAPE)
 Values
   (2, 'Heart Opal');
Insert into PENDANT
   (ID, SHAPE)
 Values
   (3, 'Oval Carnelian Shell Cameo');
COMMIT;

Insert into PERSON
   (ID, NAME, ADDRESS_ID)
 Values
   (1, 'Person_Name1', 1);
Insert into PERSON
   (ID, NAME, ADDRESS_ID)
 Values
   (2, 'Person_Name2', 2);
Insert into PERSON
   (ID, NAME, ADDRESS_ID)
 Values
   (3, 'Person_Name3', 3);
Insert into PERSON
   (ID, NAME, ADDRESS_ID)
 Values
   (4, 'Person_Name4', NULL);
Insert into PERSON
   (ID, NAME, ADDRESS_ID)
 Values
   (5, 'Person_Name5', NULL);
COMMIT;

Insert into PRIVATE_TEACHER
   (TEACHER_ID, YEARS_EXPERIENCE)
 Values
   (1, 5);
Insert into PRIVATE_TEACHER
   (TEACHER_ID, YEARS_EXPERIENCE)
 Values
   (2, 10);
Insert into PRIVATE_TEACHER
   (TEACHER_ID, YEARS_EXPERIENCE)
 Values
   (3, 15);
COMMIT;

Insert into PRODUCT
   (ID, NAME, ORDERLINE_ID)
 Values
   (1, 'Product_Name1', 1);
Insert into PRODUCT
   (ID, NAME, ORDERLINE_ID)
 Values
   (2, 'Product_Name2', 2);
Insert into PRODUCT
   (ID, NAME, ORDERLINE_ID)
 Values
   (3, 'Product_Name3', NULL);
COMMIT;

Insert into PROFESSOR
   (ID, NAME)
 Values
   (1, 'Professor_Name1');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (2, 'Professor_Name2');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (3, 'Professor_Name3');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (4, 'Professor_Name4');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (5, 'Professor_Name5');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (6, 'Professor_Name6');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (7, 'Professor_Name7');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (8, 'Professor_Name8');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (9, 'Professor_Name9');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (10, 'Professor_Name10');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (11, 'Professor_Name11');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (12, 'Professor_Name12');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (13, 'Professor_Name13');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (14, 'Professor_Name14');
Insert into PROFESSOR
   (ID, NAME)
 Values
   (15, 'Professor_Name15');
COMMIT;

Insert into PROJECT
   (ID, NAME)
 Values
   (1, 'Project_Name1');
Insert into PROJECT
   (ID, NAME)
 Values
   (2, 'Project_Name2');
Insert into PROJECT
   (ID, NAME)
 Values
   (3, 'Project_Name3');
Insert into PROJECT
   (ID, NAME)
 Values
   (4, 'Project_Name4');
Insert into PROJECT
   (ID, NAME)
 Values
   (5, 'Project_Name5');
Insert into PROJECT
   (ID, NAME)
 Values
   (6, 'Project_Name6');
Insert into PROJECT
   (ID, NAME)
 Values
   (7, 'Project_Name7');
Insert into PROJECT
   (ID, NAME)
 Values
   (8, 'Project_Name8');
Insert into PROJECT
   (ID, NAME)
 Values
   (9, 'Project_Name9');
Insert into PROJECT
   (ID, NAME)
 Values
   (10, 'Project_Name10');
COMMIT;

Insert into PUPIL
   (ID, NAME, TEACHER_ID)
 Values
   (1, 'Pupil_Name_1', 1);
Insert into PUPIL
   (ID, NAME, TEACHER_ID)
 Values
   (2, 'Pupil_Name_2', 1);
Insert into PUPIL
   (ID, NAME, TEACHER_ID)
 Values
   (3, 'Pupil_Name_3', 3);
Insert into PUPIL
   (ID, NAME, TEACHER_ID)
 Values
   (4, 'Pupil_Name_4', 3);
COMMIT;

Insert into RESTAURANT
   (ID, NAME)
 Values
   (1, 'Rest1');
Insert into RESTAURANT
   (ID, NAME)
 Values
   (2, 'Rest2');
Insert into RESTAURANT
   (ID, NAME)
 Values
   (3, 'Rest3');
Insert into RESTAURANT
   (ID, NAME)
 Values
   (4, 'Rest4');
Insert into RESTAURANT
   (ID, NAME)
 Values
   (5, 'Rest5');
COMMIT;

Insert into SALTWATER_FISH_TANK
   (ID, SHAPE, NUM_GALLONS, PROTEIN_SKIMMER_MODEL)
 Values
   (3, 'Rectangular', 60, 'Berlin X2 Turbo Skimmer');
Insert into SALTWATER_FISH_TANK
   (ID, SHAPE, NUM_GALLONS, PROTEIN_SKIMMER_MODEL)
 Values
   (4, 'Hexagonal', 20, 'Prizm Pro Deluxe Skimmer');
COMMIT;

Insert into SALTWATER_FISH_TANK_SUBSTRATE
   (SALTWATER_FISH_TANK_ID, SUBSTRATE_ID)
 Values
   (3, 1);
Insert into SALTWATER_FISH_TANK_SUBSTRATE
   (SALTWATER_FISH_TANK_ID, SUBSTRATE_ID)
 Values
   (3, 2);
Insert into SALTWATER_FISH_TANK_SUBSTRATE
   (SALTWATER_FISH_TANK_ID, SUBSTRATE_ID)
 Values
   (4, 3);
Insert into SALTWATER_FISH_TANK_SUBSTRATE
   (SALTWATER_FISH_TANK_ID, SUBSTRATE_ID)
 Values
   (4, 4);
COMMIT;

Insert into SHIRT
   (ID, STYLE)
 Values
   (1, 'Collar');
Insert into SHIRT
   (ID, STYLE)
 Values
   (2, 'Western');
Insert into SHIRT
   (ID, STYLE)
 Values
   (3, 'T-Shirt');
COMMIT;

Insert into SHIRT_BUTTON
   (SHIRT_ID, BUTTON_ID)
 Values
   (1, 1);
Insert into SHIRT_BUTTON
   (SHIRT_ID, BUTTON_ID)
 Values
   (2, 2);
COMMIT;

Insert into SHOES
   (ID, DISCRIMINATOR, COLOR, SPORTS_TYPE, DESIGNER_ID)
 Values
   (1, 'DesignerShoes', 'White', NULL, 2);
Insert into SHOES
   (ID, DISCRIMINATOR, COLOR, SPORTS_TYPE, DESIGNER_ID)
 Values
   (2, 'SportsShoes', 'Red', 'BasketBall', NULL);
Insert into SHOES
   (ID, DISCRIMINATOR, COLOR, SPORTS_TYPE, DESIGNER_ID)
 Values
   (3, 'DesignerShoes', 'Black', NULL, 3);
COMMIT;

Insert into SONG
   (ID, TITLE)
 Values
   (1, 'Albinoni:  Concerto in B Flat, OP. 7 No. 3');
Insert into SONG
   (ID, TITLE)
 Values
   (2, 'Albinoni:  Concerto in D Major, Op. 7 No. 6');
Insert into SONG
   (ID, TITLE)
 Values
   (3, 'Marcello:  Concerto in D Minor');
Insert into SONG
   (ID, TITLE)
 Values
   (4, 'Vivaldi:  Concerto in F Major F VII 2');
Insert into SONG
   (ID, TITLE)
 Values
   (5, 'Vivaldi:  Concerto in A Minor F VII 5');
Insert into SONG
   (ID, TITLE)
 Values
   (6, 'Cimarosa/Benjamin:  Concerto in C Minor');
Insert into SONG
   (ID, TITLE)
 Values
   (7, 'Rubenstein: Melody in F, Op. 3 No. 1');
Insert into SONG
   (ID, TITLE)
 Values
   (8, 'Schubert: Ave Maria');
Insert into SONG
   (ID, TITLE)
 Values
   (9, 'Rimsky-Korsakov:  The Flight of the Bumble Bee');
Insert into SONG
   (ID, TITLE)
 Values
   (10, 'Schumann:  Traumerei');
Insert into SONG
   (ID, TITLE)
 Values
   (11, 'Dvorak:  Songs My Mother Taught Me');
Insert into SONG
   (ID, TITLE)
 Values
   (12, 'Saint-Seans:  The Swan');
COMMIT;

Insert into STRING_KEY
   (ID, NAME)
 Values
   ('ID1', 'String_Key_Name1');
Insert into STRING_KEY
   (ID, NAME)
 Values
   ('ID2', 'String_Key_Name2');
Insert into STRING_KEY
   (ID, NAME)
 Values
   ('ID3', 'String_Key_Name3');
Insert into STRING_KEY
   (ID, NAME)
 Values
   ('ID4', 'String_Key_Name4');
Insert into STRING_KEY
   (ID, NAME)
 Values
   ('ID5', 'String_Key_Name5');
COMMIT;

Insert into STRING_PRIMITIVE_KEY
   (ID, NAME)
 Values
   ('id1', 'String_Primitive_Key id1');
Insert into STRING_PRIMITIVE_KEY
   (ID, NAME)
 Values
   ('id2', 'String_Primitive_Key id2');
COMMIT;

Insert into STUDENT
   (ID, NAME)
 Values
   (1, 'Student_Name1');
Insert into STUDENT
   (ID, NAME)
 Values
   (2, 'Student_Name2');
Insert into STUDENT
   (ID, NAME)
 Values
   (3, 'Student_Name3');
Insert into STUDENT
   (ID, NAME)
 Values
   (4, 'Student_Name4');
Insert into STUDENT
   (ID, NAME)
 Values
   (5, 'Student_Name5');
Insert into STUDENT
   (ID, NAME)
 Values
   (6, 'Student_Name6');
Insert into STUDENT
   (ID, NAME)
 Values
   (7, 'Student_Name7');
Insert into STUDENT
   (ID, NAME)
 Values
   (8, 'Student_Name8');
Insert into STUDENT
   (ID, NAME)
 Values
   (9, 'Student_Name9');
Insert into STUDENT
   (ID, NAME)
 Values
   (10, 'Student_Name10');
COMMIT;

Insert into SUBSTRATE
   (ID, NAME)
 Values
   (1, 'Live Rock');
Insert into SUBSTRATE
   (ID, NAME)
 Values
   (2, 'Sand');
Insert into SUBSTRATE
   (ID, NAME)
 Values
   (3, 'Crushed Coral');
Insert into SUBSTRATE
   (ID, NAME)
 Values
   (4, 'River Pebbles');
COMMIT;

Insert into SUIT
   (ID, NAME, DECK_ID)
 Values
   (1, 'Spade', 1);
Insert into SUIT
   (ID, NAME, DECK_ID)
 Values
   (2, 'Flower', 1);
Insert into SUIT
   (ID, NAME, DECK_ID)
 Values
   (3, 'Diamond', 1);
Insert into SUIT
   (ID, NAME, DECK_ID)
 Values
   (4, 'Heart', 1);
COMMIT;

Insert into TANK_ACCESSORY
   (ID, NAME)
 Values
   (1, 'Filter');
Insert into TANK_ACCESSORY
   (ID, NAME)
 Values
   (2, 'Heater');
Insert into TANK_ACCESSORY
   (ID, NAME)
 Values
   (3, 'Lighting');
Insert into TANK_ACCESSORY
   (ID, NAME)
 Values
   (4, 'Protein Skimmer');
COMMIT;

Insert into TANK_TANK_ACCESSORY
   (TANK_ID, TANK_ACCESSORY_ID, TANK_DISCRIMINATOR)
 Values
   (1, 1, 'FreshwaterFishTank');
Insert into TANK_TANK_ACCESSORY
   (TANK_ID, TANK_ACCESSORY_ID, TANK_DISCRIMINATOR)
 Values
   (1, 2, 'FreshwaterFishTank');
Insert into TANK_TANK_ACCESSORY
   (TANK_ID, TANK_ACCESSORY_ID, TANK_DISCRIMINATOR)
 Values
   (2, 2, 'FreshwaterFishTank');
Insert into TANK_TANK_ACCESSORY
   (TANK_ID, TANK_ACCESSORY_ID, TANK_DISCRIMINATOR)
 Values
   (2, 3, 'FreshwaterFishTank');
Insert into TANK_TANK_ACCESSORY
   (TANK_ID, TANK_ACCESSORY_ID, TANK_DISCRIMINATOR)
 Values
   (3, 1, 'SaltwaterFishTank');
Insert into TANK_TANK_ACCESSORY
   (TANK_ID, TANK_ACCESSORY_ID, TANK_DISCRIMINATOR)
 Values
   (3, 4, 'SaltwaterFishTank');
Insert into TANK_TANK_ACCESSORY
   (TANK_ID, TANK_ACCESSORY_ID, TANK_DISCRIMINATOR)
 Values
   (4, 1, 'SaltwaterFishTank');
Insert into TANK_TANK_ACCESSORY
   (TANK_ID, TANK_ACCESSORY_ID, TANK_DISCRIMINATOR)
 Values
   (4, 2, 'SaltwaterFishTank');
Insert into TANK_TANK_ACCESSORY
   (TANK_ID, TANK_ACCESSORY_ID, TANK_DISCRIMINATOR)
 Values
   (4, 4, 'SaltwaterFishTank');
COMMIT;

Insert into TEACHER
   (ID, NAME)
 Values
   (1, 'Teacher_Name1');
Insert into TEACHER
   (ID, NAME)
 Values
   (2, 'Teacher_Name2');
Insert into TEACHER
   (ID, NAME)
 Values
   (3, 'Teacher_Name3');
COMMIT;

Insert into TENURED_PROFESSOR
   (PROFESSOR_ID, TENURED_YEAR)
 Values
   (1, 1);
Insert into TENURED_PROFESSOR
   (PROFESSOR_ID, TENURED_YEAR)
 Values
   (2, 2);
Insert into TENURED_PROFESSOR
   (PROFESSOR_ID, TENURED_YEAR)
 Values
   (3, 3);
Insert into TENURED_PROFESSOR
   (PROFESSOR_ID, TENURED_YEAR)
 Values
   (4, 4);
Insert into TENURED_PROFESSOR
   (PROFESSOR_ID, TENURED_YEAR)
 Values
   (5, 5);
COMMIT;

Insert into UNDERGRADUATE_STUDENT
   (STUDENT_ID)
 Values
   (1);
Insert into UNDERGRADUATE_STUDENT
   (STUDENT_ID)
 Values
   (2);
Insert into UNDERGRADUATE_STUDENT
   (STUDENT_ID)
 Values
   (3);
Insert into UNDERGRADUATE_STUDENT
   (STUDENT_ID)
 Values
   (4);
Insert into UNDERGRADUATE_STUDENT
   (STUDENT_ID)
 Values
   (5);
COMMIT;

Insert into UTENSIL
   (ID, NAME)
 Values
   (1, 'Spoon');
Insert into UTENSIL
   (ID, NAME)
 Values
   (2, 'Knife');
Insert into UTENSIL
   (ID, NAME)
 Values
   (3, 'Fork');
COMMIT;

Insert into WHEEL
   (ID, RADIUS)
 Values
   (1, 1);
Insert into WHEEL
   (ID, RADIUS)
 Values
   (2, 5);
Insert into WHEEL
   (ID, RADIUS)
 Values
   (3, 10);
COMMIT;

CREATE UNIQUE INDEX PK_ADDRESS ON ADDRESS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_ALBUM ON ALBUM
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_ALBUM_SONG ON ALBUM_SONG
(ALBUM_ID, SONG_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_ALL_DATA_TYPE ON ALL_DATA_TYPE
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_ASSISTANT ON ASSISTANT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_ASSISTANT_PROFESSOR ON ASSISTANT_PROFESSOR
(PROFESSOR_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_ASSOCIATE_PROFESSOR ON ASSOCIATE_PROFESSOR
(PROFESSOR_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_AUTHOR ON AUTHOR
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_AUTHOR_BOOK ON AUTHOR_BOOK
(AUTHOR_ID, BOOK_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_BAG ON BAG
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_BAG_HANDLE ON BAG_HANDLE
(BAG_ID, HANDLE_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_BAG_HANDLE_BAG_ID ON BAG_HANDLE
(BAG_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_BAG_HANDLE_HANDLE_ID ON BAG_HANDLE
(HANDLE_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_BANK ON BANK
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_BOOK ON BOOK
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_BRIDE ON BRIDE
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_BRIDE_FATHER_IN_LAW ON BRIDE_FATHER_IN_LAW
(BRIDE_ID, IN_LAW_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_BRIDE_FATHER_IN__IN_LAW_ID ON BRIDE_FATHER_IN_LAW
(IN_LAW_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_BRIDE_FATHER_IN_L_BRIDE_ID ON BRIDE_FATHER_IN_LAW
(BRIDE_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_BRIDE_MOTHER_IN_LAW ON BRIDE_MOTHER_IN_LAW
(BRIDE_D, IN_LAW_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_BRIDE_MOTHER_IN__IN_LAW_ID ON BRIDE_MOTHER_IN_LAW
(IN_LAW_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_BRIDE_MOTHER_IN_LA_BRIDE_D ON BRIDE_MOTHER_IN_LAW
(BRIDE_D)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_BUTTON ON BUTTON
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_CALCULATOR ON CALCULATOR
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_CARD ON CARD
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_CASH ON CASH
(PAYMENT_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_CHAIN ON CHAIN
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_CHAIN_PENDANT ON CHAIN_PENDANT
(CHAIN_ID, PENDANT_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_CHAIN_PENDANT_CHAIN_ID ON CHAIN_PENDANT
(CHAIN_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_CHAIN_PENDANT_PENDANT_ID ON CHAIN_PENDANT
(PENDANT_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_CHARACTER_KEY ON CHARACTER_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_CHARACTER_PRIMITIVE_KEY ON CHARACTER_PRIMITIVE_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_CHEF ON CHEF
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_CHILD ON CHILD
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_CHILD_FATHER_ID ON CHILD
(FATHER_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_CHILD_MOTHER_ID ON CHILD
(MOTHER_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_COMPUTER ON COMPUTER
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_CREDIT ON CREDIT
(PAYMENT_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_CRT_MONITOR ON CRT_MONITOR
(MONITOR_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_CURRENCY ON CURRENCY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_DECK ON DECK
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_DESIGNER ON DESIGNER
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_DESSERT ON DESSERT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_DESSERT_UTENSIL ON DESSERT_UTENSIL
(DESSERT_ID, UTENSIL_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_DISPLAY ON DISPLAY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_DOG ON DOG
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_DOUBLE_KEY ON DOUBLE_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_DOUBLE_PRIMITIVE_KEY ON DOUBLE_PRIMITIVE_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_ELEMENT ON ELEMENT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_ELEMENT_PARENT_ELEMENT_ID ON ELEMENT
(PARENT_ELEMENT_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_EMPLOYEE ON EMPLOYEE
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_EMPLOYEE_PROJECT ON EMPLOYEE_PROJECT
(EMPLOYEE_ID, PROJECT_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_FISH ON FISH
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_FLIGHT ON FLIGHT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_FLIGHT_PASSANGER ON FLIGHT_PASSANGER
(FLIGHT_ID, PASSANGER_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_FLOAT_KEY ON FLOAT_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_FLOAT_PRIMITIVE_KEY ON FLOAT_PRIMITIVE_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_FRESHWATER_FISH_TANK ON FRESHWATER_FISH_TANK
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_GOVERMENT ON GOVERMENT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_GRADUATE_STUDENT ON GRADUATE_STUDENT
(STUDENT_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_GRAPHIC_CALCULATOR ON GRAPHIC_CALCULATOR
(CALCULATOR_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_HAND ON HAND
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_HANDLE ON HANDLE
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_HAND_CARD ON HAND_CARD
(HAND_ID, CARD_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_HARD_DRIVE ON HARD_DRIVE
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_HUMAN ON HUMAN
(MAMMAL_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_INTEGER_KEY ON INTEGER_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_INTEGER_PRIMITIVE_KEY ON INTEGER_PRIMITIVE_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_IN_LAW ON IN_LAW
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_KEYCHAIN ON KEYCHAIN
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_LATCH_KEY ON LATCH_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_LCD_MONITOR ON LCD_MONITOR
(MONITOR_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_LONG_KEY ON LONG_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_LONG_PRIMITIVE_KEY ON LONG_PRIMITIVE_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_LUGGAGE ON LUGGAGE
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_MAMMAL ON MAMMAL
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_MONITOR ON MONITOR
(DISPLAY_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_NO_ID_KEY ON NO_ID_KEY
(MY_KEY)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_ORDERLINE ON ORDERLINE
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_ORGANIZATION ON ORGANIZATION
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PARENT ON PARENT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PASSANGER ON PASSANGER
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PAYMENT ON PAYMENT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PENDANT ON PENDANT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PERSON ON PERSON
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_PERSON_ADDRESS_ID ON PERSON
(ADDRESS_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PRIVATE_TEACHER ON PRIVATE_TEACHER
(TEACHER_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PRODUCT ON PRODUCT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_PRODUCT_ORDERLINE_ID ON PRODUCT
(ORDERLINE_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PROFESSOR ON PROFESSOR
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PROJECT ON PROJECT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PUPIL ON PUPIL
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_RESTAURANT ON RESTAURANT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_SALTWATER_FISH_TANK ON SALTWATER_FISH_TANK
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_SWFT_SUBSTRATE ON SALTWATER_FISH_TANK_SUBSTRATE
(SALTWATER_FISH_TANK_ID, SUBSTRATE_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_SHIRT ON SHIRT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_SHIRT_BUTTON ON SHIRT_BUTTON
(SHIRT_ID, BUTTON_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_SHIRT_BUTTON_SHIRT_ID ON SHIRT_BUTTON
(SHIRT_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_SHOES ON SHOES
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_SONG ON SONG
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_STRING_KEY ON STRING_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_STRING_PRIMITIVE_KEY ON STRING_PRIMITIVE_KEY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_STUDENT ON STUDENT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_SUBSTRATE ON SUBSTRATE
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_SUIT ON SUIT
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_TANK_ACCESSORY ON TANK_ACCESSORY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_TANK_TANK_ACCESSORY ON TANK_TANK_ACCESSORY
(TANK_ID, TANK_ACCESSORY_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_TEACHER ON TEACHER
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_TENURED_PROFESSOR ON TENURED_PROFESSOR
(PROFESSOR_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_UNDERGRADUATE_STUDENT ON UNDERGRADUATE_STUDENT
(STUDENT_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_UTENSIL ON UTENSIL
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_WHEEL ON WHEEL
(ID)
LOGGING
NOPARALLEL;


ALTER TABLE ADDRESS ADD (
  CONSTRAINT PK_ADDRESS
 PRIMARY KEY
 (ID));


ALTER TABLE ALBUM ADD (
  CONSTRAINT PK_ALBUM
 PRIMARY KEY
 (ID));


ALTER TABLE ALBUM_SONG ADD (
  CONSTRAINT PK_ALBUM_SONG
 PRIMARY KEY
 (ALBUM_ID, SONG_ID));


ALTER TABLE ALL_DATA_TYPE ADD (
  CONSTRAINT PK_ALL_DATA_TYPE
 PRIMARY KEY
 (ID));


ALTER TABLE ALL_VALIDATION_TYPE ADD (
  CONSTRAINT PK_ALL_VALIDATION_TYPE
 PRIMARY KEY
 (ID));


ALTER TABLE ASSISTANT ADD (
  CONSTRAINT PK_ASSISTANT
 PRIMARY KEY
 (ID));


ALTER TABLE ASSISTANT_PROFESSOR ADD (
  CONSTRAINT PK_ASSISTANT_PROFESSOR
 PRIMARY KEY
 (PROFESSOR_ID));


ALTER TABLE ASSOCIATE_PROFESSOR ADD (
  CONSTRAINT PK_ASSOCIATE_PROFESSOR
 PRIMARY KEY
 (PROFESSOR_ID));


ALTER TABLE AUTHOR ADD (
  CONSTRAINT PK_AUTHOR
 PRIMARY KEY
 (ID));


ALTER TABLE AUTHOR_BOOK ADD (
  CONSTRAINT PK_AUTHOR_BOOK
 PRIMARY KEY
 (AUTHOR_ID, BOOK_ID));


ALTER TABLE BAG ADD (
  CONSTRAINT PK_BAG
 PRIMARY KEY
 (ID));


ALTER TABLE BAG_HANDLE ADD (
  CONSTRAINT PK_BAG_HANDLE
 PRIMARY KEY
 (BAG_ID, HANDLE_ID));

ALTER TABLE BAG_HANDLE ADD (
  CONSTRAINT UQ_BAG_HANDLE_BAG_ID
 UNIQUE (BAG_ID));

ALTER TABLE BAG_HANDLE ADD (
  CONSTRAINT UQ_BAG_HANDLE_HANDLE_ID
 UNIQUE (HANDLE_ID));


ALTER TABLE BANK ADD (
  CONSTRAINT PK_BANK
 PRIMARY KEY
 (ID));


ALTER TABLE BOOK ADD (
  CONSTRAINT PK_BOOK
 PRIMARY KEY
 (ID));


ALTER TABLE BRIDE ADD (
  CONSTRAINT PK_BRIDE
 PRIMARY KEY
 (ID));


ALTER TABLE BRIDE_FATHER_IN_LAW ADD (
  CONSTRAINT PK_BRIDE_FATHER_IN_LAW
 PRIMARY KEY
 (BRIDE_ID, IN_LAW_ID));

ALTER TABLE BRIDE_FATHER_IN_LAW ADD (
  CONSTRAINT UQ_BRIDE_FATHER_IN_L_BRIDE_ID
 UNIQUE (BRIDE_ID));

ALTER TABLE BRIDE_FATHER_IN_LAW ADD (
  CONSTRAINT UQ_BRIDE_FATHER_IN__IN_LAW_ID
 UNIQUE (IN_LAW_ID));


ALTER TABLE BRIDE_MOTHER_IN_LAW ADD (
  CONSTRAINT PK_BRIDE_MOTHER_IN_LAW
 PRIMARY KEY
 (BRIDE_D, IN_LAW_ID));

ALTER TABLE BRIDE_MOTHER_IN_LAW ADD (
  CONSTRAINT UQ_BRIDE_MOTHER_IN_LA_BRIDE_D
 UNIQUE (BRIDE_D));

ALTER TABLE BRIDE_MOTHER_IN_LAW ADD (
  CONSTRAINT UQ_BRIDE_MOTHER_IN__IN_LAW_ID
 UNIQUE (IN_LAW_ID));


ALTER TABLE BUTTON ADD (
  CONSTRAINT PK_BUTTON
 PRIMARY KEY
 (ID));


ALTER TABLE CALCULATOR ADD (
  CONSTRAINT PK_CALCULATOR
 PRIMARY KEY
 (ID));


ALTER TABLE CARD ADD (
  CONSTRAINT PK_CARD
 PRIMARY KEY
 (ID));


ALTER TABLE CASH ADD (
  CONSTRAINT PK_CASH
 PRIMARY KEY
 (PAYMENT_ID));


ALTER TABLE CHAIN ADD (
  CONSTRAINT PK_CHAIN
 PRIMARY KEY
 (ID));


ALTER TABLE CHAIN_PENDANT ADD (
  CONSTRAINT PK_CHAIN_PENDANT
 PRIMARY KEY
 (CHAIN_ID, PENDANT_ID));

ALTER TABLE CHAIN_PENDANT ADD (
  CONSTRAINT UQ_CHAIN_PENDANT_CHAIN_ID
 UNIQUE (CHAIN_ID));

ALTER TABLE CHAIN_PENDANT ADD (
  CONSTRAINT UQ_CHAIN_PENDANT_PENDANT_ID
 UNIQUE (PENDANT_ID));


ALTER TABLE CHARACTER_KEY ADD (
  CONSTRAINT PK_CHARACTER_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE CHARACTER_PRIMITIVE_KEY ADD (
  CONSTRAINT PK_CHARACTER_PRIMITIVE_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE CHEF ADD (
  CONSTRAINT PK_CHEF
 PRIMARY KEY
 (ID));


ALTER TABLE CHILD ADD (
  CONSTRAINT PK_CHILD
 PRIMARY KEY
 (ID));

ALTER TABLE CHILD ADD (
  CONSTRAINT UQ_CHILD_FATHER_ID
 UNIQUE (FATHER_ID));

ALTER TABLE CHILD ADD (
  CONSTRAINT UQ_CHILD_MOTHER_ID
 UNIQUE (MOTHER_ID));


ALTER TABLE COMPUTER ADD (
  CONSTRAINT PK_COMPUTER
 PRIMARY KEY
 (ID));


ALTER TABLE CREDIT ADD (
  CONSTRAINT PK_CREDIT
 PRIMARY KEY
 (PAYMENT_ID));


ALTER TABLE CRT_MONITOR ADD (
  CONSTRAINT PK_CRT_MONITOR
 PRIMARY KEY
 (MONITOR_ID));


ALTER TABLE CURRENCY ADD (
  CONSTRAINT PK_CURRENCY
 PRIMARY KEY
 (ID));


ALTER TABLE DECK ADD (
  CONSTRAINT PK_DECK
 PRIMARY KEY
 (ID));


ALTER TABLE DESIGNER ADD (
  CONSTRAINT PK_DESIGNER
 PRIMARY KEY
 (ID));


ALTER TABLE DESSERT ADD (
  CONSTRAINT PK_DESSERT
 PRIMARY KEY
 (ID));


ALTER TABLE DESSERT_UTENSIL ADD (
  CONSTRAINT PK_DESSERT_UTENSIL
 PRIMARY KEY
 (DESSERT_ID, UTENSIL_ID));


ALTER TABLE DISPLAY ADD (
  CONSTRAINT PK_DISPLAY
 PRIMARY KEY
 (ID));


ALTER TABLE DOG ADD (
  CONSTRAINT PK_DOG
 PRIMARY KEY
 (ID));


ALTER TABLE DOUBLE_KEY ADD (
  CONSTRAINT PK_DOUBLE_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE DOUBLE_PRIMITIVE_KEY ADD (
  CONSTRAINT PK_DOUBLE_PRIMITIVE_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE ELEMENT ADD (
  CONSTRAINT PK_ELEMENT
 PRIMARY KEY
 (ID));

ALTER TABLE ELEMENT ADD (
  CONSTRAINT UQ_ELEMENT_PARENT_ELEMENT_ID
 UNIQUE (PARENT_ELEMENT_ID));


ALTER TABLE EMPLOYEE ADD (
  CONSTRAINT PK_EMPLOYEE
 PRIMARY KEY
 (ID));


ALTER TABLE EMPLOYEE_PROJECT ADD (
  CONSTRAINT PK_EMPLOYEE_PROJECT
 PRIMARY KEY
 (EMPLOYEE_ID, PROJECT_ID));


ALTER TABLE FISH ADD (
  CONSTRAINT PK_FISH
 PRIMARY KEY
 (ID));


ALTER TABLE FLIGHT ADD (
  CONSTRAINT PK_FLIGHT
 PRIMARY KEY
 (ID));


ALTER TABLE FLIGHT_PASSANGER ADD (
  CONSTRAINT PK_FLIGHT_PASSANGER
 PRIMARY KEY
 (FLIGHT_ID, PASSANGER_ID));


ALTER TABLE FLOAT_KEY ADD (
  CONSTRAINT PK_FLOAT_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE FLOAT_PRIMITIVE_KEY ADD (
  CONSTRAINT PK_FLOAT_PRIMITIVE_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE FRESHWATER_FISH_TANK ADD (
  CONSTRAINT PK_FRESHWATER_FISH_TANK
 PRIMARY KEY
 (ID));


ALTER TABLE GOVERMENT ADD (
  CONSTRAINT PK_GOVERMENT
 PRIMARY KEY
 (ID));


ALTER TABLE GRADUATE_STUDENT ADD (
  CONSTRAINT PK_GRADUATE_STUDENT
 PRIMARY KEY
 (STUDENT_ID));


ALTER TABLE GRAPHIC_CALCULATOR ADD (
  CONSTRAINT PK_GRAPHIC_CALCULATOR
 PRIMARY KEY
 (CALCULATOR_ID));


ALTER TABLE HAND ADD (
  CONSTRAINT PK_HAND
 PRIMARY KEY
 (ID));


ALTER TABLE HANDLE ADD (
  CONSTRAINT PK_HANDLE
 PRIMARY KEY
 (ID));


ALTER TABLE HAND_CARD ADD (
  CONSTRAINT PK_HAND_CARD
 PRIMARY KEY
 (HAND_ID, CARD_ID));


ALTER TABLE HARD_DRIVE ADD (
  CONSTRAINT PK_HARD_DRIVE
 PRIMARY KEY
 (ID));


ALTER TABLE HUMAN ADD (
  CONSTRAINT PK_HUMAN
 PRIMARY KEY
 (MAMMAL_ID));


ALTER TABLE INTEGER_KEY ADD (
  CONSTRAINT PK_INTEGER_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE INTEGER_PRIMITIVE_KEY ADD (
  CONSTRAINT PK_INTEGER_PRIMITIVE_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE IN_LAW ADD (
  CONSTRAINT PK_IN_LAW
 PRIMARY KEY
 (ID));


ALTER TABLE KEYCHAIN ADD (
  CONSTRAINT PK_KEYCHAIN
 PRIMARY KEY
 (ID));


ALTER TABLE LATCH_KEY ADD (
  CONSTRAINT PK_LATCH_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE LCD_MONITOR ADD (
  CONSTRAINT PK_LCD_MONITOR
 PRIMARY KEY
 (MONITOR_ID));


ALTER TABLE LONG_KEY ADD (
  CONSTRAINT PK_LONG_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE LONG_PRIMITIVE_KEY ADD (
  CONSTRAINT PK_LONG_PRIMITIVE_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE LUGGAGE ADD (
  CONSTRAINT PK_LUGGAGE
 PRIMARY KEY
 (ID));


ALTER TABLE MAMMAL ADD (
  CONSTRAINT PK_MAMMAL
 PRIMARY KEY
 (ID));


ALTER TABLE MONITOR ADD (
  CONSTRAINT PK_MONITOR
 PRIMARY KEY
 (DISPLAY_ID));


ALTER TABLE NO_ID_KEY ADD (
  CONSTRAINT PK_NO_ID_KEY
 PRIMARY KEY
 (MY_KEY));


ALTER TABLE ORDERLINE ADD (
  CONSTRAINT PK_ORDERLINE
 PRIMARY KEY
 (ID));


ALTER TABLE ORGANIZATION ADD (
  CONSTRAINT PK_ORGANIZATION
 PRIMARY KEY
 (ID));


ALTER TABLE PARENT ADD (
  CONSTRAINT PK_PARENT
 PRIMARY KEY
 (ID));


ALTER TABLE PASSANGER ADD (
  CONSTRAINT PK_PASSANGER
 PRIMARY KEY
 (ID));


ALTER TABLE PAYMENT ADD (
  CONSTRAINT PK_PAYMENT
 PRIMARY KEY
 (ID));


ALTER TABLE PENDANT ADD (
  CONSTRAINT PK_PENDANT
 PRIMARY KEY
 (ID));


ALTER TABLE PERSON ADD (
  CONSTRAINT PK_PERSON
 PRIMARY KEY
 (ID));

ALTER TABLE PERSON ADD (
  CONSTRAINT UQ_PERSON_ADDRESS_ID
 UNIQUE (ADDRESS_ID));


ALTER TABLE PRIVATE_TEACHER ADD (
  CONSTRAINT PK_PRIVATE_TEACHER
 PRIMARY KEY
 (TEACHER_ID));


ALTER TABLE PRODUCT ADD (
  CONSTRAINT PK_PRODUCT
 PRIMARY KEY
 (ID));

ALTER TABLE PRODUCT ADD (
  CONSTRAINT UQ_PRODUCT_ORDERLINE_ID
 UNIQUE (ORDERLINE_ID));


ALTER TABLE PROFESSOR ADD (
  CONSTRAINT PK_PROFESSOR
 PRIMARY KEY
 (ID));


ALTER TABLE PROJECT ADD (
  CONSTRAINT PK_PROJECT
 PRIMARY KEY
 (ID));


ALTER TABLE PUPIL ADD (
  CONSTRAINT PK_PUPIL
 PRIMARY KEY
 (ID));


ALTER TABLE RESTAURANT ADD (
  CONSTRAINT PK_RESTAURANT
 PRIMARY KEY
 (ID));


ALTER TABLE SALTWATER_FISH_TANK ADD (
  CONSTRAINT PK_SALTWATER_FISH_TANK
 PRIMARY KEY
 (ID));


ALTER TABLE SALTWATER_FISH_TANK_SUBSTRATE ADD (
  CONSTRAINT PK_SWFT_SUBSTRATE
 PRIMARY KEY
 (SALTWATER_FISH_TANK_ID, SUBSTRATE_ID));


ALTER TABLE SHIRT ADD (
  CONSTRAINT PK_SHIRT
 PRIMARY KEY
 (ID));


ALTER TABLE SHIRT_BUTTON ADD (
  CONSTRAINT PK_SHIRT_BUTTON
 PRIMARY KEY
 (SHIRT_ID, BUTTON_ID));

ALTER TABLE SHIRT_BUTTON ADD (
  CONSTRAINT UQ_SHIRT_BUTTON_SHIRT_ID
 UNIQUE (SHIRT_ID));


ALTER TABLE SHOES ADD (
  CONSTRAINT PK_SHOES
 PRIMARY KEY
 (ID));


ALTER TABLE SONG ADD (
  CONSTRAINT PK_SONG
 PRIMARY KEY
 (ID));


ALTER TABLE STRING_KEY ADD (
  CONSTRAINT PK_STRING_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE STRING_PRIMITIVE_KEY ADD (
  CONSTRAINT PK_STRING_PRIMITIVE_KEY
 PRIMARY KEY
 (ID));


ALTER TABLE STUDENT ADD (
  CONSTRAINT PK_STUDENT
 PRIMARY KEY
 (ID));


ALTER TABLE SUBSTRATE ADD (
  CONSTRAINT PK_SUBSTRATE
 PRIMARY KEY
 (ID));


ALTER TABLE SUIT ADD (
  CONSTRAINT PK_SUIT
 PRIMARY KEY
 (ID));


ALTER TABLE TANK_ACCESSORY ADD (
  CONSTRAINT PK_TANK_ACCESSORY
 PRIMARY KEY
 (ID));


ALTER TABLE TANK_TANK_ACCESSORY ADD (
  CONSTRAINT PK_TANK_TANK_ACCESSORY
 PRIMARY KEY
 (TANK_ID, TANK_ACCESSORY_ID));


ALTER TABLE TEACHER ADD (
  CONSTRAINT PK_TEACHER
 PRIMARY KEY
 (ID));


ALTER TABLE TENURED_PROFESSOR ADD (
  CONSTRAINT PK_TENURED_PROFESSOR
 PRIMARY KEY
 (PROFESSOR_ID));


ALTER TABLE UNDERGRADUATE_STUDENT ADD (
  CONSTRAINT PK_UNDERGRADUATE_STUDENT
 PRIMARY KEY
 (STUDENT_ID));


ALTER TABLE UTENSIL ADD (
  CONSTRAINT PK_UTENSIL
 PRIMARY KEY
 (ID));


ALTER TABLE WHEEL ADD (
  CONSTRAINT PK_WHEEL
 PRIMARY KEY
 (ID));


ALTER TABLE ALL_DATA_TYPE_STRING_COLL ADD (
  CONSTRAINT FK_ALL_DATA_TYPE_ALL_DATA_TYPE 
 FOREIGN KEY (ALL_DATA_TYPE_ID) 
 REFERENCES ALL_DATA_TYPE (ID)
    ON DELETE CASCADE);


ALTER TABLE ASSISTANT ADD (
  CONSTRAINT FK_ASSISTANT_PROFESSOR 
 FOREIGN KEY (PROFESSOR_ID) 
 REFERENCES PROFESSOR (ID));


ALTER TABLE ASSISTANT_PROFESSOR ADD (
  CONSTRAINT FK_ASSISTANT_PROFESS_PROFESSOR 
 FOREIGN KEY (PROFESSOR_ID) 
 REFERENCES PROFESSOR (ID));


ALTER TABLE ASSOCIATE_PROFESSOR ADD (
  CONSTRAINT FK_ASSOCIATE_PROFESS_PROFESSOR 
 FOREIGN KEY (PROFESSOR_ID) 
 REFERENCES PROFESSOR (ID));


ALTER TABLE AUTHOR_BOOK ADD (
  CONSTRAINT FK_AUTHOR_BOOK_AUTHOR 
 FOREIGN KEY (AUTHOR_ID) 
 REFERENCES AUTHOR (ID));

ALTER TABLE AUTHOR_BOOK ADD (
  CONSTRAINT FK_AUTHOR_BOOK_BOOK 
 FOREIGN KEY (BOOK_ID) 
 REFERENCES BOOK (ID));


ALTER TABLE BAG_HANDLE ADD (
  CONSTRAINT FK_BAG_HANDLE_BAG 
 FOREIGN KEY (BAG_ID) 
 REFERENCES BAG (ID));

ALTER TABLE BAG_HANDLE ADD (
  CONSTRAINT FK_BAG_HANDLE_HANDLE 
 FOREIGN KEY (HANDLE_ID) 
 REFERENCES HANDLE (ID));


ALTER TABLE BRIDE_FATHER_IN_LAW ADD (
  CONSTRAINT FK_BRIDE_FATHER_IN_LAW_BRIDE 
 FOREIGN KEY (BRIDE_ID) 
 REFERENCES BRIDE (ID));

ALTER TABLE BRIDE_FATHER_IN_LAW ADD (
  CONSTRAINT FK_BRIDE_FATHER_IN_LAW_IN_LAW 
 FOREIGN KEY (IN_LAW_ID) 
 REFERENCES IN_LAW (ID));


ALTER TABLE BRIDE_MOTHER_IN_LAW ADD (
  CONSTRAINT FK_BRIDE_MOTHER_IN_LAW_BRIDE 
 FOREIGN KEY (BRIDE_D) 
 REFERENCES BRIDE (ID));

ALTER TABLE BRIDE_MOTHER_IN_LAW ADD (
  CONSTRAINT FK_BRIDE_MOTHER_IN_LAW_IN_LAW 
 FOREIGN KEY (IN_LAW_ID) 
 REFERENCES IN_LAW (ID));


ALTER TABLE CARD ADD (
  CONSTRAINT FK_CARD_SUIT 
 FOREIGN KEY (SUIT_ID) 
 REFERENCES SUIT (ID));


ALTER TABLE CASH ADD (
  CONSTRAINT FK_CASH_PAYMENT 
 FOREIGN KEY (PAYMENT_ID) 
 REFERENCES PAYMENT (ID));


ALTER TABLE CHAIN_PENDANT ADD (
  CONSTRAINT FK_CHAIN_PENDANT_CHAIN 
 FOREIGN KEY (CHAIN_ID) 
 REFERENCES CHAIN (ID));

ALTER TABLE CHAIN_PENDANT ADD (
  CONSTRAINT FK_CHAIN_PENDANT_PENDANT 
 FOREIGN KEY (PENDANT_ID) 
 REFERENCES PENDANT (ID));


ALTER TABLE CHEF ADD (
  CONSTRAINT FK_CHEF_RESTAURANT 
 FOREIGN KEY (RESTAURANT_ID) 
 REFERENCES RESTAURANT (ID));


ALTER TABLE CHILD ADD (
  CONSTRAINT FK_CHILD_PARENT 
 FOREIGN KEY (FATHER_ID) 
 REFERENCES PARENT (ID));

ALTER TABLE CHILD ADD (
  CONSTRAINT FK_CHILD_PARENT_M 
 FOREIGN KEY (MOTHER_ID) 
 REFERENCES PARENT (ID));


ALTER TABLE CREDIT ADD (
  CONSTRAINT FK_CREDIT_BANK 
 FOREIGN KEY (BANK_ID) 
 REFERENCES BANK (ID));

ALTER TABLE CREDIT ADD (
  CONSTRAINT FK_CREDIT_PAYMENT 
 FOREIGN KEY (PAYMENT_ID) 
 REFERENCES PAYMENT (ID));


ALTER TABLE CRT_MONITOR ADD (
  CONSTRAINT FK_CRT_MONITOR_MONITOR 
 FOREIGN KEY (MONITOR_ID) 
 REFERENCES MONITOR (DISPLAY_ID));


ALTER TABLE DESSERT_UTENSIL ADD (
  CONSTRAINT FK_DESSERT_UTENSIL_DESSERT 
 FOREIGN KEY (DESSERT_ID) 
 REFERENCES DESSERT (ID));

ALTER TABLE DESSERT_UTENSIL ADD (
  CONSTRAINT FK_DESSERT_UTENSIL_UTENSIL 
 FOREIGN KEY (UTENSIL_ID) 
 REFERENCES UTENSIL (ID));


ALTER TABLE ELEMENT ADD (
  CONSTRAINT FK_ELEMENT_ELEMENT 
 FOREIGN KEY (PARENT_ELEMENT_ID) 
 REFERENCES ELEMENT (ID));


ALTER TABLE EMPLOYEE_PROJECT ADD (
  CONSTRAINT FK_EMPLOYEE_PROJECT_EMPLOYEE 
 FOREIGN KEY (EMPLOYEE_ID) 
 REFERENCES EMPLOYEE (ID));

ALTER TABLE EMPLOYEE_PROJECT ADD (
  CONSTRAINT FK_EMPLOYEE_PROJECT_PROJECT 
 FOREIGN KEY (PROJECT_ID) 
 REFERENCES PROJECT (ID));


ALTER TABLE FLIGHT_PASSANGER ADD (
  CONSTRAINT FK_FLIGHT_PASSANGER_FLIGHT 
 FOREIGN KEY (FLIGHT_ID) 
 REFERENCES FLIGHT (ID));

ALTER TABLE FLIGHT_PASSANGER ADD (
  CONSTRAINT FK_FLIGHT_PASSANGER_PASSANGER 
 FOREIGN KEY (PASSANGER_ID) 
 REFERENCES PASSANGER (ID));


ALTER TABLE GRADUATE_STUDENT ADD (
  CONSTRAINT FK_GRADUATE_STUDENT_STUDENT 
 FOREIGN KEY (STUDENT_ID) 
 REFERENCES STUDENT (ID));


ALTER TABLE GRAPHIC_CALCULATOR ADD (
  CONSTRAINT FK_GRAPHIC_CALCULAT_CALCULATOR 
 FOREIGN KEY (CALCULATOR_ID) 
 REFERENCES CALCULATOR (ID));


ALTER TABLE HAND_CARD ADD (
  CONSTRAINT FK_HAND_CARD_CARD 
 FOREIGN KEY (CARD_ID) 
 REFERENCES CARD (ID));

ALTER TABLE HAND_CARD ADD (
  CONSTRAINT FK_HAND_CARD_HAND 
 FOREIGN KEY (HAND_ID) 
 REFERENCES HAND (ID));


ALTER TABLE HARD_DRIVE ADD (
  CONSTRAINT FK_HARD_DRIVE_COMPUTER 
 FOREIGN KEY (COMPUTER_ID) 
 REFERENCES COMPUTER (ID));


ALTER TABLE HUMAN ADD (
  CONSTRAINT FK_HUMAN_MAMMAL 
 FOREIGN KEY (MAMMAL_ID) 
 REFERENCES MAMMAL (ID));


ALTER TABLE LATCH_KEY ADD (
  CONSTRAINT FK_LATCH_KEY_KEYCHAIN 
 FOREIGN KEY (KEYCHAIN_ID) 
 REFERENCES KEYCHAIN (ID));


ALTER TABLE LCD_MONITOR ADD (
  CONSTRAINT FK_LCD_MONITOR_MONITOR 
 FOREIGN KEY (MONITOR_ID) 
 REFERENCES MONITOR (DISPLAY_ID));


ALTER TABLE LUGGAGE ADD (
  CONSTRAINT FK_LUGGAGE_WHEEL 
 FOREIGN KEY (WHEEL_ID) 
 REFERENCES WHEEL (ID));


ALTER TABLE MONITOR ADD (
  CONSTRAINT FK_MONITOR_DISPLAY 
 FOREIGN KEY (DISPLAY_ID) 
 REFERENCES DISPLAY (ID));


ALTER TABLE PERSON ADD (
  CONSTRAINT FK_PERSON_ADDRESS 
 FOREIGN KEY (ADDRESS_ID) 
 REFERENCES ADDRESS (ID));


ALTER TABLE PRIVATE_TEACHER ADD (
  CONSTRAINT FK_PRIVATE_TEACHER_TEACHER 
 FOREIGN KEY (TEACHER_ID) 
 REFERENCES TEACHER (ID));


ALTER TABLE PRODUCT ADD (
  CONSTRAINT FK_PRODUCT_ORDERLINE 
 FOREIGN KEY (ORDERLINE_ID) 
 REFERENCES ORDERLINE (ID));


ALTER TABLE PUPIL ADD (
  CONSTRAINT FK_PUPIL_TEACHER 
 FOREIGN KEY (TEACHER_ID) 
 REFERENCES TEACHER (ID));


ALTER TABLE SALTWATER_FISH_TANK_SUBSTRATE ADD (
  CONSTRAINT FK_SWFT_SUBSTRATE_SUBSTRATE 
 FOREIGN KEY (SUBSTRATE_ID) 
 REFERENCES SUBSTRATE (ID));

ALTER TABLE SALTWATER_FISH_TANK_SUBSTRATE ADD (
  CONSTRAINT FK_SWFT_SUBSTRATE_SWFT 
 FOREIGN KEY (SALTWATER_FISH_TANK_ID) 
 REFERENCES SALTWATER_FISH_TANK (ID));


ALTER TABLE SHIRT_BUTTON ADD (
  CONSTRAINT FK_SHIRT_BUTTON_BUTTON 
 FOREIGN KEY (BUTTON_ID) 
 REFERENCES BUTTON (ID));

ALTER TABLE SHIRT_BUTTON ADD (
  CONSTRAINT FK_SHIRT_BUTTON_SHIRT 
 FOREIGN KEY (SHIRT_ID) 
 REFERENCES SHIRT (ID));


ALTER TABLE SHOES ADD (
  CONSTRAINT FK_SHOES_DESIGNER 
 FOREIGN KEY (DESIGNER_ID) 
 REFERENCES DESIGNER (ID));


ALTER TABLE SUIT ADD (
  CONSTRAINT FK_SUIT_DECK 
 FOREIGN KEY (DECK_ID) 
 REFERENCES DECK (ID));


ALTER TABLE TANK_TANK_ACCESSORY ADD (
  CONSTRAINT FK_TANK_TANK_ACCESSORY_TA 
 FOREIGN KEY (TANK_ACCESSORY_ID) 
 REFERENCES TANK_ACCESSORY (ID));

ALTER TABLE TANK_TANK_ACCESSORY ADD (
  CONSTRAINT FK_TANK_TANK_ACCESSORY_TANK 
 FOREIGN KEY (TANK_ID) 
 REFERENCES SALTWATER_FISH_TANK (ID) DISABLE);


ALTER TABLE TENURED_PROFESSOR ADD (
  CONSTRAINT FK_TENURED_PROFESSOR_PROFESSOR 
 FOREIGN KEY (PROFESSOR_ID) 
 REFERENCES PROFESSOR (ID));


ALTER TABLE UNDERGRADUATE_STUDENT ADD (
  CONSTRAINT FK_UNDERGRADUATE_STUDE_STUDENT 
 FOREIGN KEY (STUDENT_ID) 
 REFERENCES STUDENT (ID));

COMMIT;
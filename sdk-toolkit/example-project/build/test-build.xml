<?xml version="1.0" encoding="UTF-8"?>
<project name="caCore SDK - Test Scripts" basedir="." default="defaultTest">

	<description>Build script for caCORE SDK Generator Hudson Tests</description>

	<property name="project.home" location="${basedir}/.." />
	<property name="project.target.dir" value="${project.home}/target" />
	<property name="dist.dir" value="${project.target.dir}/dist"/>
	<property name="dist.exploded.dir" value="${dist.dir}/exploded"/>

	<property name="junit.dir" value="${project.home}/junit"/>

	<!-- load ant contrib -->
	<path id="taskdef.cp">
		<fileset dir="${junit.dir}/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="taskdef.cp" />
	<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="taskdef.cp" />

	<macrodef name="run-test">

		<attribute name="SERVER.TYPE" default="tomcat" />
		<attribute name="MODEL.FILE.TYPE" default="EA" />
		<attribute name="MODEL.FILE" default="sdk.xmi" />

		<attribute name="DB.TYPE" default="oracle" />
		<attribute name="DB.USE.JNDI.BASED.CONNECTION" default="false" />

		<attribute name="ENABLE.WRITABLE.API.EXTENSION" default="false" />
		<attribute name="ENABLE.COMMON.LOGGING.MODULE" default="false" />

		<attribute name="ENABLE.SECURITY" default="false" />
		<attribute name="ENABLE.GRID.LOGIN.MODULE" default="false" />
		<attribute name="ENABLE.CSM.LOGIN.MODULE" default="false" />
		<attribute name="ENABLE.INSTANCE.LEVEL.SECURITY" default="false" />
		<attribute name="ENABLE.ATTRIBUTE.LEVEL.SECURITY" default="false" />
		<attribute name="CACHE.PROTECTION.ELEMENTS" default="false" />
		<attribute name="CSM.USE.JNDI.BASED.CONNECTION" default="false" />

		<attribute name="GENERATE.XSD.WITH.GME.TAGS" default="false" />
		<attribute name="GENERATE.XSD.WITH.PERMISSIBLE.VALUE" default="false" />
		<attribute name="GENERATE.HIBERNATE.VALIDATOR" default="false" />

		<attribute name="DB.INSTALL.CREATE.MYSQL.FILE.LIST" default="SDKTestSchema-mysql.sql,SDKTestCSMSchema-mysql.sql,SDKTestCLMSchema-mysql.sql" />
		<attribute name="DB.INSTALL.CREATE.ORACLE.FILE.LIST" default="SDKTestSchema-oracle.sql,SDKTestCSMSchema-oracle.sql,SDKTestCLMSchema-oracle.sql" />
		<attribute name="DB.INSTALL.CREATE.POSTGRESQL.FILE.LIST" default="SDKTestSchema-postgresql.sql,SDKTestCSMSchema-postgresql.sql,SDKTestCLMSchema-postgresql.sql" />

		<attribute name="TARGET.GRID" default="training-1.3" />

		<attribute name="SERVER.URL" default="localhost" />

		<attribute name="REPORT.PROJECT.DIR" default="defaultTest" />

		<sequential>
			<property name="SERVER_TYPE" value="@{SERVER.TYPE}" />
			<property name="MODEL_FILE_TYPE" value="@{MODEL.FILE.TYPE}" />
			<property name="MODEL_FILE" value="@{MODEL.FILE}" />

			<property name="DB_TYPE" value="@{DB.TYPE}" />
			<property name="DB_USE_JNDI_BASED_CONNECTION" value="@{DB.USE.JNDI.BASED.CONNECTION}" />

			<property name="ENABLE_WRITABLE_API_EXTENSION" value="@{ENABLE.WRITABLE.API.EXTENSION}" />
			<property name="ENABLE_COMMON_LOGGING_MODULE" value="@{ENABLE.COMMON.LOGGING.MODULE}" />

			<property name="ENABLE_SECURITY" value="@{ENABLE.SECURITY}" />
			<property name="ENABLE_GRID_LOGIN_MODULE" value="@{ENABLE.GRID.LOGIN.MODULE}" />
			<property name="ENABLE_CSM_LOGIN_MODULE" value="@{ENABLE.CSM.LOGIN.MODULE}" />
			<property name="ENABLE_INSTANCE_LEVEL_SECURITY" value="@{ENABLE.INSTANCE.LEVEL.SECURITY}" />
			<property name="ENABLE_ATTRIBUTE_LEVEL_SECURITY" value="@{ENABLE.ATTRIBUTE.LEVEL.SECURITY}" />
			<property name="CACHE_PROTECTION_ELEMENTS" value="@{CACHE.PROTECTION.ELEMENTS}" />
			<property name="CSM_USE_JNDI_BASED_CONNECTION" value="@{CSM.USE.JNDI.BASED.CONNECTION}" />

			<property name="GENERATE_XSD_WITH_GME_TAGS" value="@{GENERATE.XSD.WITH.GME.TAGS}" />
			<property name="GENERATE_XSD_WITH_PERMISSIBLE_VALUE" value="@{GENERATE.XSD.WITH.PERMISSIBLE.VALUE}" />
			<property name="GENERATE_HIBERNATE_VALIDATOR" value="@{GENERATE.HIBERNATE.VALIDATOR}" />

			<property name="db.install.create.mysql.file.list" value="@{DB.INSTALL.CREATE.MYSQL.FILE.LIST}"/>
			<property name="db.install.create.oracle.file.list" value="@{DB.INSTALL.CREATE.ORACLE.FILE.LIST}"/>
			<property name="db.install.create.postgresql.file.list" value="@{DB.INSTALL.CREATE.POSTGRESQL.FILE.LIST}"/>

			<property name="TARGET_GRID" value="@{TARGET.GRID}" />
			<property name="INSTALL_CONTAINER" value="true" />
			<property name="generate.report" value="false" />

			<if>
				<equals arg1="${DB_TYPE}" arg2="mysql" />
				<then>
					<property file="${junit.dir}/db-mysql.properties" />
				</then>
				<elseif>
					<equals arg1="${DB_TYPE}" arg2="oracle" />
					<then>
						<property file="${junit.dir}/db-oracle.properties" />
					</then>
				</elseif>
				<else>
						<property file="${junit.dir}/db-postgres.properties" />
				</else>
			</if>			
			
			<ant antfile="build.xml" dir="." target="build-system" inheritAll="true"/>
			
			<copy todir="${dist.exploded.dir}" overwrite="true">
				<fileset dir="." includes="*.properties" />
			</copy>
			
			<ant antfile="build.xml" dir="${dist.exploded.dir}" target="install" inheritAll="true">
				<property name="bda-utils.dir" value="${dist.exploded.dir}/bda-utils" />
				<property name="force.reinstall" value="true" />
			</ant>
			
			<delete dir="${report.project.dir}/build-report" />

			<ant antfile="build.xml" dir="${junit.dir}" target="xmlMappingTest" inheritAll="true"/>
			<ant antfile="build.xml" dir="${junit.dir}" target="hbmMappingTest" inheritAll="true"/>

			<!-- @TODO different setup stop jboss rename war run testcase 
			<ant antfile="build.xml" dir="${junit.dir}" target="appServiceTest" inheritAll="true"/>-->

			<if>
				<not>
					<or>
						<equals arg1="${DB_USE_JNDI_BASED_CONNECTION}" arg2="true" />
						<equals arg1="${CSM_USE_JNDI_BASED_CONNECTION}" arg2="true" />
					</or>
				</not>
				<then>
					<if>
						<not>
							<equals arg1="${ENABLE_SECURITY}" arg2="true" />
						</not>
						<then>
							<ant antfile="build.xml" dir="${junit.dir}" target="readThickClientTest" inheritAll="true" />
							<ant antfile="build.xml" dir="${junit.dir}" target="cqlQueryThickClientTest" inheritAll="true" />
						</then>
						<else>
							<ant antfile="build.xml" dir="${junit.dir}" target="securityThickClientTest" inheritAll="true" />
							<ant antfile="build.xml" dir="${junit.dir}" target="securityGroupThickClientTest" inheritAll="true" />
						</else>
					</if>
				</then>
			</if>

			<if>
				<not>
					<equals arg1="${ENABLE_SECURITY}" arg2="true" />
				</not>
				<then>
					<ant antfile="build.xml" dir="${junit.dir}" target="readRemoteClientTest" inheritAll="true" />
					<ant antfile="build.xml" dir="${junit.dir}" target="cqlQueryRemoteClientTest" inheritAll="true" />
					<ant antfile="build.xml" dir="${junit.dir}" target="xmlDataRemoteClientTest" inheritAll="true" />
					<ant antfile="build.xml" dir="${junit.dir}" target="webServicesTest" inheritAll="true" />
				</then>
				<else>
					<ant antfile="build.xml" dir="${junit.dir}" target="securityRemoteClientTest" inheritAll="true" />
				</else>
			</if>

			<if>
				<equals arg1="${ENABLE_WRITABLE_API_EXTENSION}" arg2="true" />
				<then>
					<ant antfile="build.xml" dir="${junit.dir}" target="hibernateValidatorTest" inheritAll="true" />
				</then>
			</if>

			<if>
				<and>
					<equals arg1="${ENABLE_WRITABLE_API_EXTENSION}" arg2="true" />
					<not>
						<equals arg1="${ENABLE_SECURITY}" arg2="true" />
					</not>
				</and>
				<then>
					<ant antfile="build.xml" dir="${junit.dir}" target="writeRemoteClientTest" inheritAll="true" />
					<if>
						<not>
							<or>
								<equals arg1="${DB_USE_JNDI_BASED_CONNECTION}" arg2="true" />
								<equals arg1="${CSM_USE_JNDI_BASED_CONNECTION}" arg2="true" />
							</or>
						</not>
						<then>
							<ant antfile="build.xml" dir="${junit.dir}" target="writeThickClientTest" inheritAll="true" />
						</then>
					</if>
				</then>
			</if>

			<if>
				<and>
					<equals arg1="${ENABLE_WRITABLE_API_EXTENSION}" arg2="true" />
					<equals arg1="${ENABLE_SECURITY}" arg2="true" />
				</and>
				<then>
					<ant antfile="build.xml" dir="${junit.dir}" target="writeSecureRemoteClientTest" inheritAll="true" />
					<if>
						<not>
							<or>
								<equals arg1="${DB_USE_JNDI_BASED_CONNECTION}" arg2="true" />
								<equals arg1="${CSM_USE_JNDI_BASED_CONNECTION}" arg2="true" />
							</or>
						</not>
						<then>
							<ant antfile="build.xml" dir="${junit.dir}" target="writeSecureThickClientTest" inheritAll="true" />
						</then>
					</if>
					<!--
					 Concurrent modification  error from ehcache 
					<ant antfile="build.xml" dir="${junit.dir}" target="writeDatabaseCleanUpTest" inheritAll="true" />
					 -->
				</then>
			</if>

			<if>
				<and>
					<equals arg1="${ENABLE_WRITABLE_API_EXTENSION}" arg2="true" />
					<equals arg1="${DB_TYPE}" arg2="mysql"/>
				</and>
				<then>
					<ant antfile="build.xml" dir="${junit.dir}" target="writeDatabaseCleanUpTest" inheritAll="true" />
				</then>
			</if>

			<property name="report.project.dir" value="${junit.dir}/report/@{REPORT.PROJECT.DIR}" />
			<delete dir="${report.project.dir}" />
			<mkdir dir="${report.project.dir}" />
			<property file="${project.home}/build/codegen.properties" />
			<property file="${SDK_INSTALL_DIR}/software/build/project.properties"/>
			<property file="${project.home}/build/install.properties" />
			
			<copy file="${SDK_INSTALL_DIR}/software/build/cobertura.ser" todir="${junit.dir}/report/@{REPORT.PROJECT.DIR}/codegen-cobertura.ser" overwrite="true" failonerror="false"/>
			<delete file="${SDK_INSTALL_DIR}/software/build/cobertura.ser"  failonerror="false"/>

			<condition property="application.base.path" value="${application.base.path.linux}">
				<or>
				<os family="unix" />
					<os family="mac" />
				</or>
			</condition>
			<condition property="application.base.path" value="${application.base.path.windows}">
				<os family="windows" />
			</condition>
			<property name="jboss.home" value="${application.base.path}/${jboss.relative.path}"/>
			<property name="tomcat.home" value="${application.base.path}/${tomcat.relative.path}"/>

			<if>
				<equals arg1="${SERVER_TYPE}" arg2="tomcat" />
				<then>
					<post to="http://${tomcat.hostname}:${tomcat.port.http}/coberturaFlush/flushCobertura" verbose="true"/>

					<copy file="${tomcat.home}/bin/cobertura.ser" todir="${junit.dir}/report/@{REPORT.PROJECT.DIR}/tomcat-cobertura.ser" overwrite="true" />
				</then>
				<else>
					<post to="http://${jboss.server.hostname}:${jboss.server.port}/coberturaFlush/flushCobertura"  verbose="true"/>
					<ant antfile="build.xml" dir="${dist.exploded.dir}" target="install:jboss:stop" inheritAll="true" />					
					
					<copy file="${jboss.home}/bin/cobertura.ser" todir="${junit.dir}/report/@{REPORT.PROJECT.DIR}/jboss-cobertura.ser" overwrite="true" />
				</else>
			</if>
			<!--
			<delete dir="${project.target.dir}" failonerror="false"/>-->
		</sequential>
	</macrodef>

	<target name="diag">
		<property environment="env" />
		<echoproperties />
	</target>

	<target name="executeAllTests">
		<antcall target="defaultTest" inheritall="false"/>
		<antcall target="build2Test" inheritall="false"/>
		<antcall target="build3Test" inheritall="false"/>
		<antcall target="build4Test" inheritall="false"/>
		<antcall target="build5Test" inheritall="false"/>
		<antcall target="build6Test" inheritall="false"/>
		<antcall target="build7Test" inheritall="false"/>
		<antcall target="build8Test" inheritall="false"/>
		<antcall target="build9Test" inheritall="false"/>
		<antcall target="build10Test" inheritall="false"/>
		<antcall target="build11Test" inheritall="false"/>
		<antcall target="build12Test" inheritall="false"/>
		<antcall target="build13Test" inheritall="false"/>
		<antcall target="build14Test" inheritall="false"/>
		<antcall target="build15Test" inheritall="false"/>
		<antcall target="build16Test" inheritall="false"/>
		<antcall target="build17Test" inheritall="false"/>
		<antcall target="build18Test" inheritall="false"/>
	</target>

	<target name="defaultTest">
		<run-test />
	</target>

	<target name="build2Test">
		<run-test ENABLE.WRITABLE.API.EXTENSION="true" DB.TYPE="oracle" GENERATE.XSD.WITH.GME.TAGS="true" REPORT.PROJECT.DIR="build2Test" />
	</target>

	<target name="build3Test">
		<run-test MODEL.FILE.TYPE="ARGO" MODEL.FILE="sdk.uml" DB.USE.JNDI.BASED.CONNECTION="true" ENABLE.COMMON.LOGGING.MODULE="true" DB.TYPE="mysql" ENABLE.WRITABLE.API.EXTENSION="true"  REPORT.PROJECT.DIR="build3Test" />
	</target>

	<target name="build4Test">
		<run-test DB.USE.JNDI.BASED.CONNECTION="true" ENABLE.SECURITY="true" ENABLE.CSM.LOGIN.MODULE="true" GENERATE.XSD.WITH.PERMISSIBLE.VALUE="true" REPORT.PROJECT.DIR="build4Test" />
	</target>

	<!-- some build fails  CACHE.PROTECTION.ELEMENTS="true" bug in CSM -->
	<target name="build5Test">
		<run-test ENABLE.SECURITY="true" CACHE.PROTECTION.ELEMENTS="true" ENABLE.CSM.LOGIN.MODULE="true" CSM.USE.JNDI.BASED.CONNECTION="true" REPORT.PROJECT.DIR="build5Test" />
	</target>

	<target name="build6Test">
		<run-test ENABLE.SECURITY="true" ENABLE.CSM.LOGIN.MODULE="true" ENABLE.INSTANCE.LEVEL.SECURITY="true" GENERATE.XSD.WITH.GME.TAGS="true" GENERATE.XSD.WITH.PERMISSIBLE.VALUE="true" REPORT.PROJECT.DIR="build6Test" />
	</target>

	<target name="build7Test">
		<run-test ENABLE.SECURITY="true" ENABLE.CSM.LOGIN.MODULE="true" ENABLE.ATTRIBUTE.LEVEL.SECURITY="true" REPORT.PROJECT.DIR="build7Test" />
	</target>

	<target name="build8Test">
		<run-test ENABLE.SECURITY="true" CACHE.PROTECTION.ELEMENTS="true" ENABLE.CSM.LOGIN.MODULE="true" ENABLE.INSTANCE.LEVEL.SECURITY="true" ENABLE.ATTRIBUTE.LEVEL.SECURITY="true" REPORT.PROJECT.DIR="build8Test" />
	</target>

	<target name="build9Test">
		<run-test DB.TYPE="mysql" ENABLE.WRITABLE.API.EXTENSION="true" ENABLE.SECURITY="true" ENABLE.CSM.LOGIN.MODULE="true" REPORT.PROJECT.DIR="build9Test" />
	</target>

	<target name="build10Test">
		<run-test SERVER.TYPE="jboss" DB.TYPE="mysql" ENABLE.WRITABLE.API.EXTENSION="true" ENABLE.COMMON.LOGGING.MODULE="true" ENABLE.SECURITY="true" ENABLE.GRID.LOGIN.MODULE="true" ENABLE.ATTRIBUTE.LEVEL.SECURITY="true" REPORT.PROJECT.DIR="build10Test" />
	</target>

	<target name="build11Test">
		<run-test DB.TYPE="mysql" ENABLE.SECURITY="true" ENABLE.GRID.LOGIN.MODULE="true"  REPORT.PROJECT.DIR="build11Test" />
	</target>

	<target name="build12Test">
		<run-test ENABLE.SECURITY="true" CACHE.PROTECTION.ELEMENTS="true" ENABLE.GRID.LOGIN.MODULE="true" ENABLE.CSM.LOGIN.MODULE="true" ENABLE.INSTANCE.LEVEL.SECURITY="true" REPORT.PROJECT.DIR="build12Test" />
	</target>

	<target name="build13Test">
		<run-test SERVER.TYPE="jboss" DB.TYPE="mysql"  REPORT.PROJECT.DIR="build13Test"/>
	</target>

	<target name="build14Test">
		<run-test SERVER.TYPE="jboss" MODEL.FILE.TYPE="ARGO" MODEL.FILE="sdk.uml" ENABLE.WRITABLE.API.EXTENSION="true" ENABLE.COMMON.LOGGING.MODULE="true" GENERATE.HIBERNATE.VALIDATOR="true"  REPORT.PROJECT.DIR="build14Test" />
	</target>

	<target name="build15Test">
		<run-test SERVER.TYPE="jboss" DB.USE.JNDI.BASED.CONNECTION="true" ENABLE.SECURITY="true" ENABLE.CSM.LOGIN.MODULE="true" CSM.USE.JNDI.BASED.CONNECTION="true" REPORT.PROJECT.DIR="build15Test"  />
	</target>

	<target name="build16Test">
		<run-test SERVER.TYPE="jboss" ENABLE.SECURITY="true" ENABLE.GRID.LOGIN.MODULE="true"  REPORT.PROJECT.DIR="build16Test"/>
	</target>
	
	<target name="build17Test">
		<run-test SERVER.TYPE="jboss" DB.TYPE="postgresql" DB.USE.JNDI.BASED.CONNECTION="true" ENABLE.SECURITY="true" ENABLE.CSM.LOGIN.MODULE="true" CSM.USE.JNDI.BASED.CONNECTION="true" REPORT.PROJECT.DIR="build17Test"  />
	</target>
	
	<target name="build18Test">
		<run-test SERVER.TYPE="tomcat" DB.TYPE="postgresql" REPORT.PROJECT.DIR="build18Test"  />
	</target>

	<target name="buildAggregateReport">
		<ant antfile="build.xml" dir="${junit.dir}" target="buildAggregateReport" inheritAll="true" />
	</target>
</project>
 This file describes the build targets available to developers in the build.xml script.
 Of note is the build:all target.  This target builds all sub projects in this directory.

 You can get the latest target descriptions by executing "ant -p" at the command line in this directory.

 build-bda-template.build:all              Builds all the sub projects, putting artifacts in the project level target directory, used by distribution targets to make distributions
 build-bda-template.deploy:local:upgrade   Upgrades and configures the application and database  on the local machine. Used for developer desktops and ci environments.
 build-bda-template.deploy:remote:upgrade  Installs and configures the application and required binaries and re-creates the Database  on a remote machine. Used for NCI tiers (dev, qa, stg, prod)
 build-bda-template.dist                   Makes all distributions: installer, upgrader and source
 build-bda-template.dist:installer:prep    Copies artifacts not generated by sub-project builds into the install distribution area
 build-bda-template.dist:tools:retrieve    Downloads binary applications from common library repository
 build-bda-template.init                   Sets up build are and initializes variables
 build-bda-template.ivy:clean              Cleans up the ivy cache of this project and all sub-projects
 build-system                              Builds all the sub projects, putting artifacts in the project level target directory, used by distribution targets to make distributions
 build:all                                 Builds all the sub projects, putting artifacts in the project level target directory, used by distribution targets to make distributions
 build:bda-blueprints-api                  Call api sub-projects build target to produce artifacts
 build:bda-blueprints-webapp               Call webapp sub-projects build target to produce artifacts
 build:project-webapp                      Call webapp sub-projects build target to produce artifacts
 build:project-webapp:dist                 Call webapp sub-projects build target to produce artifacts
 build:workspace-modules                   Call modules build target to produce artifacts
 continuous-integration                    calls wrapper targets for continuous integration build
 database:diff                             Upgrades database using BDA Database Upgrade process.
 database:doc                              Generates database documentation.
 database:gencl                            Upgrades database using BDA Database Upgrade process.
 database:prep                             Copies DB files with filtering
 deploy:hot                                Hot deploys the deployment artifact
 deploy:hot:jsp                            Copies all current JSP code to the deployed application for quick update
 deploy:local:install                      Installs and configures the application and required binaries and re-creates the database  on the local machine. Used for developer desktops and ci environments.
 deploy:local:upgrade                      Upgrades and configures the application and database  on the local machine. Used for developer desktops and ci environments.
 deploy:remote:install                     Installs and configures the application and required binaries and re-creates the database  on a remote machine. Used for NCI tiers (dev, qa, stg, prod)
 deploy:remote:install:no-build            Installs and configures the application and required binaries and re-creates the database  on a remote machine. Used for NCI tiers (dev, qa, stg, prod)
 deploy:remote:upgrade                     Installs and configures the application and required binaries and re-creates the database  on a remote machine. Used for NCI tiers (dev, qa, stg, prod)
 diagnostics                               diagnostics
 dist                                      Makes all distributions: installer, upgrader and source
 dist:gui-installer                        Makes Gui-Installer distribution
 dist:installer                            Produces zip file based on installer distribution area. Zip is used by deploy:remote:* or external installations
 dist:installer:prep                       Copies artifacts not generated by sub-project builds into the install distribution area
 dist:src                                  Makes source distribution
 dist:tools:retrieve                       Downloads binary applications from commonlibrary repository
 dist:tools:retrieve:cagrid                Downloads JBOSS from binary repository and verifies checksum
 dist:tools:retrieve:jboss                 Downloads JBOSS from binary repository and verifies checksum
 dist:tools:retrieve:jboss-bindings        Downloads JBOSS bindings filefrom binary repository and verifies checksum
 dist:tools:retrieve:jbosscp               Downloads JBOSS Cumulative Patch from binary repository and verifies checksum
 dist:tools:retrieve:tomcat                Downloads TOMCAT from binary repository and verifies checksum
 dist:upgrader                             Produces zip file based on installer distribution area. Zip is used by deploy:remote:* or external installations
 dist:upgrader:prep                        Copies artifacts not generated by sub-project builds into the install distribution area
 init                                      Sets up build are and initalizes variables
 init:ivy                                  Initializes ivy-repo.based on ivy definition file and ivy settings file
 ivy-resolve-all                           Downloads all libraries included in the ivy definition file from ivy into local lib directory
 ivy-test-selenium                         Downloads selenium libraries from ivy into library directory
 ivy:clean                                 Cleans up the ivy cache of this project and all sub-projects
 maven-static-analysis:all                 Runs static-analysis target for all sub-projects
 maven-test:all                            Runs test targets on all sub-projects
 report:grand                              Generates target flow diagrams for build files
 report:ivy                                Runs ivy reports on all dependencies in the ivy definition file, also produces dependency diagrams
 static-analysis:all                       Runs static-analysis target for all sub-projects
 static-analysis:bda-blueprints-api        Calls static-analysis target for sub-project
 static-analysis:bda-blueprints-webapp     Calls static-analysis target for sub-project
 static-analysis:workspace-modules         Call modules build target to produce static analysis of source code
 test:all                                  Runs test target for all sub-projects
 test:bda-blueprints-api                   Calls test target for sub-project
 test:bda-blueprints-webapp                Calls test target for sub-project
 test:selenium                             Wrapper target to selenium test suite
 test:selenium:init                        Sets up environment for running selenium tests
 test:selenium:run                         Executes selenium test suite
 test:seleniumrc:stop                      Stops selenuimrc server when using selenium from java
 usage                                     Explains how to use this build script
 
Minimum Hardware Requirements

Users of caCORE SDK need a computer system for two purposes: first, to generate a system using caCORE SDK, and second, to host the generated 
system in a production environment.

caCORE SDK 4.4 has been built and tested on the platforms shown in Table 1.2 below. Users can utilize the tested configurations shown as a 
reference to determine their appropriate hardware configuration. Hardware selections should be based on the amount of data the system is expected 
to handle.

			Linux Server  				Solaris  				Windows  
Model  		HP Proliant ML 330  		Sunfire 480R  			Dell GX 270  
CPU  		1 x Intel® Xeon™ Processor 	2.80GHz 2 x 1050MHz  	1 x Intel® Pentium™ Processor 2.80GHz  
Memory  	4 GB  						4 GB  					1 GB  
Local Disk  System 2 x 36GB  			(RAID 1) 				System 1 x 36GB
										Data = 2 x 146 (RAID 1) 
										System 2 x 72GB  		  
OS  		Red Hat Linux ES 3   		Solaris 8  				Windows XP/2000 Professional  
			(RPM 2.4.21-20.0.1)

Software Requirements

The software listed the following table is required to use caCORE SDK, but is not included with the caCORE SDK download. Users must download and 
install the appropriate listed software.

Software  		Description  							Version  				Download URL  
JDK  			Supports creating J2SE applications  	1.5.0_11+, but not 1.6  http://java.sun.com/j2se/1.5.0/download.html  
Enterprise   	UML Modeling Tool  						6.0 or higher  			http://www.sparxsystems.com.au/
Architect (EA)  
ArgoUML    		UML Modeling Tool						0.24, 0.26  			http://argouml.tigris.org/  
Oracle  		Database Server  						9i, 10g					http://www.oracle.com/technology/products/oracle9i/index.html  
MySQL    		Database Server							5.0.27  				http://dev.mysql.com/downloads/mysql/5.0.html 
PostgreSQL		Database Server							8.3-604 or higher		http://www.postgresql.org/download/ 
JBoss  			Application Server  					4.0.5  					http://labs.jboss.com/jbossas/downloads.  BDA deploy process will download and install 
Tomcat    		Application Server						5.5.20  				http://tomcat.apache.org/download-55.cgi.  BDA deploy process will download and install  
Ant  			Build Tool  							1.7.1 or higher  		http://ant.apache.org/bindownload.cgi  
 